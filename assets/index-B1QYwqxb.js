var Xs=Object.defineProperty;var Zs=(e,r,t)=>r in e?Xs(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var L=(e,r,t)=>Zs(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();const Gt=!1;var Wr=Array.isArray,eo=Array.prototype.indexOf,Mr=Array.from,ro=Object.defineProperty,Le=Object.getOwnPropertyDescriptor,to=Object.prototype,so=Array.prototype,oo=Object.getPrototypeOf,Ot=Object.isExtensible;function no(e){return typeof(e==null?void 0:e.then)=="function"}function Jt(e){for(var r=0;r<e.length;r++)e[r]()}const X=2,Qt=4,cr=8,Vr=16,de=32,Pe=64,zr=128,J=256,nr=512,Q=1024,ie=2048,Ee=4096,ne=8192,Kr=16384,Yt=32768,Jr=65536,io=1<<19,Xt=1<<20,Lr=1<<21,br=Symbol("$state");function Zt(e){return e===this.v}function ao(e,r){return e!=e?r==r:e!==r||e!==null&&typeof e=="object"||typeof e=="function"}function es(e){return!ao(e,this.v)}function uo(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function lo(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function co(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function po(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let go=!1;const ho=1,mo=2,fo=16,_o=1,Eo=2,B=Symbol();let re=null;function ir(e){re=e}function Qr(e,r=!1,t){var s=re={p:re,c:null,d:!1,e:null,m:!1,s:e,x:null,l:null};Oo(()=>{s.d=!0})}function Yr(e){const r=re;if(r!==null){const a=r.e;if(a!==null){var t=S,s=A;r.e=null;try{for(var o=0;o<a.length;o++){var i=a[o];te(i.effect),Y(i.reaction),Ao(i.fn)}}finally{te(t),Y(s)}}re=r.p,r.m=!0}return{}}function rs(){return!0}function le(e){if(typeof e!="object"||e===null||br in e)return e;const r=oo(e);if(r!==to&&r!==so)return e;var t=new Map,s=Wr(e),o=$(0),i=A,a=u=>{var l=A;Y(i);var d=u();return Y(l),d};return s&&t.set("length",$(e.length)),new Proxy(e,{defineProperty(u,l,d){(!("value"in d)||d.configurable===!1||d.enumerable===!1||d.writable===!1)&&lo();var g=t.get(l);return g===void 0?g=a(()=>{var m=$(d.value);return t.set(l,m),m}):D(g,d.value,!0),!0},deleteProperty(u,l){var d=t.get(l);if(d===void 0){if(l in u){const f=a(()=>$(B));t.set(l,f),yr(o)}}else{if(s&&typeof l=="string"){var g=t.get("length"),m=Number(l);Number.isInteger(m)&&m<g.v&&D(g,m)}D(d,B),yr(o)}return!0},get(u,l,d){var E;if(l===br)return e;var g=t.get(l),m=l in u;if(g===void 0&&(!m||(E=Le(u,l))!=null&&E.writable)&&(g=a(()=>{var y=le(m?u[l]:B),G=$(y);return G}),t.set(l,g)),g!==void 0){var f=O(g);return f===B?void 0:f}return Reflect.get(u,l,d)},getOwnPropertyDescriptor(u,l){var d=Reflect.getOwnPropertyDescriptor(u,l);if(d&&"value"in d){var g=t.get(l);g&&(d.value=O(g))}else if(d===void 0){var m=t.get(l),f=m==null?void 0:m.v;if(m!==void 0&&f!==B)return{enumerable:!0,configurable:!0,value:f,writable:!0}}return d},has(u,l){var f;if(l===br)return!0;var d=t.get(l),g=d!==void 0&&d.v!==B||Reflect.has(u,l);if(d!==void 0||S!==null&&(!g||(f=Le(u,l))!=null&&f.writable)){d===void 0&&(d=a(()=>{var E=g?le(u[l]):B,y=$(E);return y}),t.set(l,d));var m=O(d);if(m===B)return!1}return g},set(u,l,d,g){var C;var m=t.get(l),f=l in u;if(s&&l==="length")for(var E=d;E<m.v;E+=1){var y=t.get(E+"");y!==void 0?D(y,B):E in u&&(y=a(()=>$(B)),t.set(E+"",y))}if(m===void 0)(!f||(C=Le(u,l))!=null&&C.writable)&&(m=a(()=>$(void 0)),D(m,le(d)),t.set(l,m));else{f=m.v!==B;var G=a(()=>le(d));D(m,G)}var v=Reflect.getOwnPropertyDescriptor(u,l);if(v!=null&&v.set&&v.set.call(g,d),!f){if(s&&typeof l=="string"){var w=t.get("length"),P=Number(l);Number.isInteger(P)&&P>=w.v&&D(w,P+1)}yr(o)}return!0},ownKeys(u){O(o);var l=Reflect.ownKeys(u).filter(m=>{var f=t.get(m);return f===void 0||f.v!==B});for(var[d,g]of t)g.v!==B&&!(d in u)&&l.push(d);return l},setPrototypeOf(){co()}})}function yr(e,r=1){D(e,e.v+r)}function Xr(e){var r=X|ie,t=A!==null&&(A.f&X)!==0?A:null;return S===null||t!==null&&(t.f&J)!==0?r|=J:S.f|=Xt,{ctx:re,deps:null,effects:null,equals:Zt,f:r,fn:e,reactions:null,rv:0,v:null,wv:0,parent:t??S}}function To(e){const r=Xr(e);return _s(r),r}function vo(e){const r=Xr(e);return r.equals=es,r}function ts(e){var r=e.effects;if(r!==null){e.effects=null;for(var t=0;t<r.length;t+=1)pe(r[t])}}function wo(e){for(var r=e.parent;r!==null;){if((r.f&X)===0)return r;r=r.parent}return null}function ss(e){var r,t=S;te(wo(e));try{ts(e),r=ws(e)}finally{te(t)}return r}function os(e){var r=ss(e);if(e.equals(r)||(e.v=r,e.wv=Ts()),!We){var t=(ce||(e.f&J)!==0)&&e.deps!==null?Ee:Q;se(e,t)}}const je=new Map;function ke(e,r){var t={f:0,v:e,reactions:null,equals:Zt,rv:0,wv:0};return t}function $(e,r){const t=ke(e);return _s(t),t}function bo(e,r=!1,t=!0){const s=ke(e);return r||(s.equals=es),s}function D(e,r,t=!1){A!==null&&!ee&&rs()&&(A.f&(X|Vr))!==0&&!(I!=null&&I[1].includes(e)&&I[0]===A)&&po();let s=t?le(r):r;return Ie(e,s)}function Ie(e,r){if(!e.equals(r)){var t=e.v;We?je.set(e,r):je.set(e,t),e.v=r,(e.f&X)!==0&&((e.f&ie)!==0&&ss(e),se(e,(e.f&J)===0?Q:Ee)),e.wv=Ts(),ns(e,ie),S!==null&&(S.f&Q)!==0&&(S.f&(de|Pe))===0&&(K===null?Io([e]):K.push(e))}return r}function ns(e,r){var t=e.reactions;if(t!==null)for(var s=t.length,o=0;o<s;o++){var i=t[o],a=i.f;(a&ie)===0&&(se(i,r),(a&(Q|J))!==0&&((a&X)!==0?ns(i,Ee):tt(i)))}}let yo=!1;var Rt,is,as,us;function ko(){if(Rt===void 0){Rt=window,is=/Firefox/.test(navigator.userAgent);var e=Element.prototype,r=Node.prototype,t=Text.prototype;as=Le(r,"firstChild").get,us=Le(r,"nextSibling").get,Ot(e)&&(e.__click=void 0,e.__className=void 0,e.__attributes=null,e.__style=void 0,e.__e=void 0),Ot(t)&&(t.__t=void 0)}}function Zr(e=""){return document.createTextNode(e)}function ar(e){return as.call(e)}function pr(e){return us.call(e)}function N(e,r){return ar(e)}function Ir(e,r){{var t=ar(e);return t instanceof Comment&&t.data===""?pr(t):t}}function F(e,r=1,t=!1){let s=e;for(;r--;)s=pr(s);return s}function Po(e){e.textContent=""}function Go(e,r){var t=r.last;t===null?r.last=r.first=e:(t.next=e,e.prev=t,r.last=e)}function Ge(e,r,t,s=!0){var o=S,i={ctx:re,deps:null,nodes_start:null,nodes_end:null,f:e|ie,first:null,fn:r,last:null,next:null,parent:o,prev:null,teardown:null,transitions:null,wv:0};if(t)try{rt(i),i.f|=Yt}catch(l){throw pe(i),l}else r!==null&&tt(i);var a=t&&i.deps===null&&i.first===null&&i.nodes_start===null&&i.teardown===null&&(i.f&(Xt|zr))===0;if(!a&&s&&(o!==null&&Go(i,o),A!==null&&(A.f&X)!==0)){var u=A;(u.effects??(u.effects=[])).push(i)}return i}function Oo(e){const r=Ge(cr,null,!1);return se(r,Q),r.teardown=e,r}function Ro(e){const r=Ge(Pe,e,!0);return(t={})=>new Promise(s=>{t.outro?ye(r,()=>{pe(r),s(void 0)}):(pe(r),s(void 0))})}function Ao(e){return Ge(Qt,e,!1)}function ls(e){return Ge(cr,e,!0)}function kr(e,r=[],t=Xr){const s=r.map(t);return dr(()=>e(...s.map(O)))}function dr(e,r=0){return Ge(cr|Vr|r,e,!0)}function me(e,r=!0){return Ge(cr|de,e,!0,r)}function cs(e){var r=e.teardown;if(r!==null){const t=We,s=A;At(!0),Y(null);try{r.call(null)}finally{At(t),Y(s)}}}function ps(e,r=!1){var t=e.first;for(e.first=e.last=null;t!==null;){var s=t.next;(t.f&Pe)!==0?t.parent=null:pe(t,r),t=s}}function So(e){for(var r=e.first;r!==null;){var t=r.next;(r.f&de)===0&&pe(r),r=t}}function pe(e,r=!0){var t=!1;(r||(e.f&io)!==0)&&e.nodes_start!==null&&e.nodes_end!==null&&(Fo(e.nodes_start,e.nodes_end),t=!0),ps(e,r&&!t),lr(e,0),se(e,Kr);var s=e.transitions;if(s!==null)for(const i of s)i.stop();cs(e);var o=e.parent;o!==null&&o.first!==null&&ds(e),e.next=e.prev=e.teardown=e.ctx=e.deps=e.fn=e.nodes_start=e.nodes_end=null}function Fo(e,r){for(;e!==null;){var t=e===r?null:pr(e);e.remove(),e=t}}function ds(e){var r=e.parent,t=e.prev,s=e.next;t!==null&&(t.next=s),s!==null&&(s.prev=t),r!==null&&(r.first===e&&(r.first=s),r.last===e&&(r.last=t))}function ye(e,r){var t=[];et(e,t,!0),gs(t,()=>{pe(e),r&&r()})}function gs(e,r){var t=e.length;if(t>0){var s=()=>--t||r();for(var o of e)o.out(s)}else r()}function et(e,r,t){if((e.f&ne)===0){if(e.f^=ne,e.transitions!==null)for(const a of e.transitions)(a.is_global||t)&&r.push(a);for(var s=e.first;s!==null;){var o=s.next,i=(s.f&Jr)!==0||(s.f&de)!==0;et(s,r,i?t:!1),s=o}}}function qe(e){hs(e,!0)}function hs(e,r){if((e.f&ne)!==0){e.f^=ne;for(var t=e.first;t!==null;){var s=t.next,o=(t.f&Jr)!==0||(t.f&de)!==0;hs(t,o?r:!1),t=s}if(e.transitions!==null)for(const i of e.transitions)(i.is_global||r)&&i.in()}}let Ne=[],qr=[];function ms(){var e=Ne;Ne=[],Jt(e)}function Co(){var e=qr;qr=[],Jt(e)}function Do(e){Ne.length===0&&queueMicrotask(ms),Ne.push(e)}function Uo(){Ne.length>0&&ms(),qr.length>0&&Co()}function Lo(e){var r=S;if((r.f&Yt)===0){if((r.f&zr)===0)throw e;r.fn(e)}else fs(e,r)}function fs(e,r){for(;r!==null;){if((r.f&zr)!==0)try{r.fn(e);return}catch{}r=r.parent}throw e}let Be=!1,He=null,fe=!1,We=!1;function At(e){We=e}let xe=[];let A=null,ee=!1;function Y(e){A=e}let S=null;function te(e){S=e}let I=null;function _s(e){A!==null&&A.f&Lr&&(I===null?I=[A,[e]]:I[1].push(e))}let H=null,z=0,K=null;function Io(e){K=e}let Es=1,ur=0,ce=!1;function Ts(){return++Es}function gr(e){var m;var r=e.f;if((r&ie)!==0)return!0;if((r&Ee)!==0){var t=e.deps,s=(r&J)!==0;if(t!==null){var o,i,a=(r&nr)!==0,u=s&&S!==null&&!ce,l=t.length;if(a||u){var d=e,g=d.parent;for(o=0;o<l;o++)i=t[o],(a||!((m=i==null?void 0:i.reactions)!=null&&m.includes(d)))&&(i.reactions??(i.reactions=[])).push(d);a&&(d.f^=nr),u&&g!==null&&(g.f&J)===0&&(d.f^=J)}for(o=0;o<l;o++)if(i=t[o],gr(i)&&os(i),i.wv>e.wv)return!0}(!s||S!==null&&!ce)&&se(e,Q)}return!1}function vs(e,r,t=!0){var s=e.reactions;if(s!==null)for(var o=0;o<s.length;o++){var i=s[o];I!=null&&I[1].includes(e)&&I[0]===A||((i.f&X)!==0?vs(i,r,!1):r===i&&(t?se(i,ie):(i.f&Q)!==0&&se(i,Ee),tt(i)))}}function ws(e){var E;var r=H,t=z,s=K,o=A,i=ce,a=I,u=re,l=ee,d=e.f;H=null,z=0,K=null,ce=(d&J)!==0&&(ee||!fe||A===null),A=(d&(de|Pe))===0?e:null,I=null,ir(e.ctx),ee=!1,ur++,e.f|=Lr;try{var g=(0,e.fn)(),m=e.deps;if(H!==null){var f;if(lr(e,z),m!==null&&z>0)for(m.length=z+H.length,f=0;f<H.length;f++)m[z+f]=H[f];else e.deps=m=H;if(!ce)for(f=z;f<m.length;f++)((E=m[f]).reactions??(E.reactions=[])).push(e)}else m!==null&&z<m.length&&(lr(e,z),m.length=z);if(rs()&&K!==null&&!ee&&m!==null&&(e.f&(X|Ee|ie))===0)for(f=0;f<K.length;f++)vs(K[f],e);return o!==null&&o!==e&&(ur++,K!==null&&(s===null?s=K:s.push(...K))),g}catch(y){Lo(y)}finally{H=r,z=t,K=s,A=o,ce=i,I=a,ir(u),ee=l,e.f^=Lr}}function qo(e,r){let t=r.reactions;if(t!==null){var s=eo.call(t,e);if(s!==-1){var o=t.length-1;o===0?t=r.reactions=null:(t[s]=t[o],t.pop())}}t===null&&(r.f&X)!==0&&(H===null||!H.includes(r))&&(se(r,Ee),(r.f&(J|nr))===0&&(r.f^=nr),ts(r),lr(r,0))}function lr(e,r){var t=e.deps;if(t!==null)for(var s=r;s<t.length;s++)qo(e,t[s])}function rt(e){var r=e.f;if((r&Kr)===0){se(e,Q);var t=S,s=fe;S=e,fe=!0;try{(r&Vr)!==0?So(e):ps(e),cs(e);var o=ws(e);e.teardown=typeof o=="function"?o:null,e.wv=Es;var i;Gt&&go&&(e.f&ie)!==0&&e.deps}finally{fe=s,S=t}}}function xo(){try{uo()}catch(e){if(He!==null)fs(e,He);else throw e}}function bs(){var e=fe;try{var r=0;for(fe=!0;xe.length>0;){r++>1e3&&xo();var t=xe,s=t.length;xe=[];for(var o=0;o<s;o++){var i=jo(t[o]);$o(i)}je.clear()}}finally{Be=!1,fe=e,He=null}}function $o(e){var r=e.length;if(r!==0)for(var t=0;t<r;t++){var s=e[t];(s.f&(Kr|ne))===0&&gr(s)&&(rt(s),s.deps===null&&s.first===null&&s.nodes_start===null&&(s.teardown===null?ds(s):s.fn=null))}}function tt(e){Be||(Be=!0,queueMicrotask(bs));for(var r=He=e;r.parent!==null;){r=r.parent;var t=r.f;if((t&(Pe|de))!==0){if((t&Q)===0)return;r.f^=Q}}xe.push(r)}function jo(e){for(var r=[],t=e;t!==null;){var s=t.f,o=(s&(de|Pe))!==0,i=o&&(s&Q)!==0;if(!i&&(s&ne)===0){(s&Qt)!==0?r.push(t):o?t.f^=Q:gr(t)&&rt(t);var a=t.first;if(a!==null){t=a;continue}}var u=t.parent;for(t=t.next;t===null&&u!==null;)t=u.next,u=u.parent}return r}function No(e){for(var r;;){if(Uo(),xe.length===0)return Be=!1,He=null,r;Be=!0,bs()}}function O(e){var r=e.f,t=(r&X)!==0;if(A!==null&&!ee){if(!(I!=null&&I[1].includes(e))||I[0]!==A){var s=A.deps;e.rv<ur&&(e.rv=ur,H===null&&s!==null&&s[z]===e?z++:H===null?H=[e]:(!ce||!H.includes(e))&&H.push(e))}}else if(t&&e.deps===null&&e.effects===null){var o=e,i=o.parent;i!==null&&(i.f&J)===0&&(o.f^=J)}return t&&(o=e,gr(o)&&os(o)),We&&je.has(e)?je.get(e):e.v}function ys(e){var r=ee;try{return ee=!0,e()}finally{ee=r}}const Bo=-7169;function se(e,r){e.f=e.f&Bo|r}const Ho=["touchstart","touchmove"];function Wo(e){return Ho.includes(e)}let St=!1;function Mo(){St||(St=!0,document.addEventListener("reset",e=>{Promise.resolve().then(()=>{var r;if(!e.defaultPrevented)for(const t of e.target.elements)(r=t.__on_r)==null||r.call(t)})},{capture:!0}))}function Vo(e){var r=A,t=S;Y(null),te(null);try{return e()}finally{Y(r),te(t)}}function ks(e,r,t,s=t){e.addEventListener(r,()=>Vo(t));const o=e.__on_r;o?e.__on_r=()=>{o(),s(!0)}:e.__on_r=()=>s(!0),Mo()}const Ps=new Set,xr=new Set;function st(e){for(var r=0;r<e.length;r++)Ps.add(e[r]);for(var t of xr)t(e)}function er(e){var P;var r=this,t=r.ownerDocument,s=e.type,o=((P=e.composedPath)==null?void 0:P.call(e))||[],i=o[0]||e.target,a=0,u=e.__root;if(u){var l=o.indexOf(u);if(l!==-1&&(r===document||r===window)){e.__root=r;return}var d=o.indexOf(r);if(d===-1)return;l<=d&&(a=l)}if(i=o[a]||e.target,i!==r){ro(e,"currentTarget",{configurable:!0,get(){return i||t}});var g=A,m=S;Y(null),te(null);try{for(var f,E=[];i!==null;){var y=i.assignedSlot||i.parentNode||i.host||null;try{var G=i["__"+s];if(G!=null&&(!i.disabled||e.target===i))if(Wr(G)){var[v,...w]=G;v.apply(i,[e,...w])}else G.call(i,e)}catch(C){f?E.push(C):f=C}if(e.cancelBubble||y===r||y===null)break;i=y}if(f){for(let C of E)queueMicrotask(()=>{throw C});throw f}}finally{e.__root=r,delete e.currentTarget,Y(g),te(m)}}}function zo(e){var r=document.createElement("template");return r.innerHTML=e.replaceAll("<!>","<!---->"),r.content}function $r(e,r){var t=S;t.nodes_start===null&&(t.nodes_start=e,t.nodes_end=r)}function Me(e,r){var t=(r&_o)!==0,s=(r&Eo)!==0,o,i=!e.startsWith("<!>");return()=>{o===void 0&&(o=zo(i?e:"<!>"+e),t||(o=ar(o)));var a=s||is?document.importNode(o,!0):o.cloneNode(!0);if(t){var u=ar(a),l=a.lastChild;$r(u,l)}else $r(a,a);return a}}function Ft(e=""){{var r=Zr(e+"");return $r(r,r),r}}function ge(e,r){e!==null&&e.before(r)}function Ct(e,r){var t=r==null?"":typeof r=="object"?r+"":r;t!==(e.__t??(e.__t=e.nodeValue))&&(e.__t=t,e.nodeValue=t+"")}function Ko(e,r){return Jo(e,r)}const Te=new Map;function Jo(e,{target:r,anchor:t,props:s={},events:o,context:i,intro:a=!0}){ko();var u=new Set,l=m=>{for(var f=0;f<m.length;f++){var E=m[f];if(!u.has(E)){u.add(E);var y=Wo(E);r.addEventListener(E,er,{passive:y});var G=Te.get(E);G===void 0?(document.addEventListener(E,er,{passive:y}),Te.set(E,1)):Te.set(E,G+1)}}};l(Mr(Ps)),xr.add(l);var d=void 0,g=Ro(()=>{var m=t??r.appendChild(Zr());return me(()=>{if(i){Qr({});var f=re;f.c=i}o&&(s.$$events=o),d=e(m,s)||{},i&&Yr()}),()=>{var y;for(var f of u){r.removeEventListener(f,er);var E=Te.get(f);--E===0?(document.removeEventListener(f,er),Te.delete(f)):Te.set(f,E)}xr.delete(l),m!==t&&((y=m.parentNode)==null||y.removeChild(m))}});return Qo.set(d,g),d}let Qo=new WeakMap;const Pr=0,rr=1,Gr=2;function Yo(e,r,t,s,o){var i=e,a=re,u=B,l,d,g,m=ke(void 0),f=ke(void 0),E=!1;function y(v,w){E=!0,w&&(te(G),Y(G),ir(a));try{v===Pr&&t&&(l?qe(l):l=me(()=>t(i))),v===rr&&s&&(d?qe(d):d=me(()=>s(i,m))),v===Gr&&o&&(g?qe(g):g=me(()=>o(i,f))),v!==Pr&&l&&ye(l,()=>l=null),v!==rr&&d&&ye(d,()=>d=null),v!==Gr&&g&&ye(g,()=>g=null)}finally{w&&(ir(null),Y(null),te(null),No())}}var G=dr(()=>{if(u!==(u=r())){if(no(u)){var v=u;E=!1,v.then(w=>{v===u&&(Ie(m,w),y(rr,!0))},w=>{if(v===u&&(Ie(f,w),y(Gr,!0),!o))throw f.v}),Do(()=>{E||y(Pr,!0)})}else Ie(m,u),y(rr,!1);return()=>u=B}})}function Xo(e,r){return r}function Zo(e,r,t,s){for(var o=[],i=r.length,a=0;a<i;a++)et(r[a].e,o,!0);var u=i>0&&o.length===0&&t!==null;if(u){var l=t.parentNode;Po(l),l.append(t),s.clear(),ue(e,r[0].prev,r[i-1].next)}gs(o,()=>{for(var d=0;d<i;d++){var g=r[d];u||(s.delete(g.k),ue(e,g.prev,g.next)),pe(g.e,!u)}})}function en(e,r,t,s,o,i=null){var a=e,u={flags:r,items:new Map,first:null};{var l=e;a=l.appendChild(Zr())}var d=null,g=!1,m=vo(()=>{var f=t();return Wr(f)?f:f==null?[]:Mr(f)});dr(()=>{var f=O(m),E=f.length;g&&E===0||(g=E===0,rn(f,u,a,o,r,s,t),i!==null&&(E===0?d?qe(d):d=me(()=>i(a)):d!==null&&ye(d,()=>{d=null})),O(m))})}function rn(e,r,t,s,o,i,a){var u=e.length,l=r.items,d=r.first,g=d,m,f=null,E=[],y=[],G,v,w,P;for(P=0;P<u;P+=1){if(G=e[P],v=i(G,P),w=l.get(v),w===void 0){var C=g?g.e.nodes_start:t;f=sn(C,r,f,f===null?r.first:f.next,G,v,P,s,o,a),l.set(v,f),E=[],y=[],g=f.next;continue}if(tn(w,G,P),(w.e.f&ne)!==0&&qe(w.e),w!==g){if(m!==void 0&&m.has(w)){if(E.length<y.length){var W=y[0],q;f=W.prev;var M=E[0],V=E[E.length-1];for(q=0;q<E.length;q+=1)Dt(E[q],W,t);for(q=0;q<y.length;q+=1)m.delete(y[q]);ue(r,M.prev,V.next),ue(r,f,M),ue(r,V,W),g=W,f=V,P-=1,E=[],y=[]}else m.delete(w),Dt(w,g,t),ue(r,w.prev,w.next),ue(r,w,f===null?r.first:f.next),ue(r,f,w),f=w;continue}for(E=[],y=[];g!==null&&g.k!==v;)(g.e.f&ne)===0&&(m??(m=new Set)).add(g),y.push(g),g=g.next;if(g===null)continue;w=g}E.push(w),f=w,g=w.next}if(g!==null||m!==void 0){for(var oe=m===void 0?[]:Mr(m);g!==null;)(g.e.f&ne)===0&&oe.push(g),g=g.next;var ae=oe.length;if(ae>0){var Re=u===0?t:null;Zo(r,oe,Re,l)}}S.first=r.first&&r.first.e,S.last=f&&f.e}function tn(e,r,t,s){Ie(e.v,r),e.i=t}function sn(e,r,t,s,o,i,a,u,l,d){var g=(l&ho)!==0,m=(l&fo)===0,f=g?m?bo(o,!1,!1):ke(o):o,E=(l&mo)===0?a:ke(a),y={i:E,v:f,k:i,a:null,e:null,prev:t,next:s};try{return y.e=me(()=>u(e,f,E,d),yo),y.e.prev=t&&t.e,y.e.next=s&&s.e,t===null?r.first=y:(t.next=y,t.e.next=y.e),s!==null&&(s.prev=y,s.e.prev=y.e),y}finally{}}function Dt(e,r,t){for(var s=e.next?e.next.e.nodes_start:t,o=r?r.e.nodes_start:t,i=e.e.nodes_start;i!==s;){var a=pr(i);o.before(i),i=a}}function ue(e,r,t){r===null?e.first=t:(r.next=t,r.e.next=t&&t.e),t!==null&&(t.prev=r,t.e.prev=r&&r.e)}function on(e,r,t){var s=e,o,i;dr(()=>{o!==(o=r())&&(i&&(ye(i),i=null),o&&(i=me(()=>t(s,o))))},Jr)}function jr(e,r,t=r){ks(e,"input",s=>{var o=s?e.defaultValue:e.value;if(o=Or(e)?Rr(o):o,t(o),o!==(o=r())){var i=e.selectionStart,a=e.selectionEnd;e.value=o??"",a!==null&&(e.selectionStart=i,e.selectionEnd=Math.min(a,e.value.length))}}),ys(r)==null&&e.value&&t(Or(e)?Rr(e.value):e.value),ls(()=>{var s=r();Or(e)&&s===Rr(e.value)||e.type==="date"&&!s&&!e.value||s!==e.value&&(e.value=s??"")})}function tr(e,r,t=r){ks(e,"change",s=>{var o=s?e.defaultChecked:e.checked;t(o)}),ys(r)==null&&t(e.checked),ls(()=>{var s=r();e.checked=!!s})}function Or(e){var r=e.type;return r==="number"||r==="range"}function Rr(e){return e===""?null:+e}const nn="5";var Kt;typeof window<"u"&&((Kt=window.__svelte??(window.__svelte={})).v??(Kt.v=new Set)).add(nn);function hr(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function Gs(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce((o,i)=>Gs.bind(null,e,i,o,s),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((o,i)=>i.hook.bind(null,o,s),t)():t(s))}function an(e,r,t,s){const o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=(i,a)=>Promise.resolve().then(o.bind(null,a)).then(i.bind(null,a))),r==="after"&&(s=(i,a)=>{let u;return Promise.resolve().then(i.bind(null,a)).then(l=>(u=l,o(u,a))).then(()=>u)}),r==="error"&&(s=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(u=>o(u,a))),e.registry[t].push({hook:s,orig:o})}function un(e,r,t){if(!e.registry[r])return;const s=e.registry[r].map(o=>o.orig).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}const Ut=Function.bind,Lt=Ut.bind(Ut);function ln(e,r,t){const s=Lt(un,null).apply(null,[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{const i=[r,o];e[o]=e.api[o]=Lt(an,null).apply(null,i)})}function cn(){const e={registry:{}},r=Gs.bind(null,e);return ln(r,e),r}const pn={Collection:cn};var dn="0.0.0-development",gn=`octokit-endpoint.js/${dn} ${hr()}`,hn={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":gn},mediaType:{format:""}};function mn(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function fn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function Os(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(s=>{fn(r[s])?s in e?t[s]=Os(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function It(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function Nr(e,r,t){var o;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=mn(t.headers),It(t),It(t.headers);const s=Os(e||{},t);return t.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(i=>!s.mediaType.previews.includes(i)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),s}function _n(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var En=/\{[^{}}]+\}/g;function Tn(e){return e.replace(new RegExp("(?:^\\W+)|(?:(?<!\\W)\\W+$)","g"),"").split(/,/)}function vn(e){const r=e.match(En);return r?r.map(Tn).reduce((t,s)=>t.concat(s),[]):[]}function qt(e,r){const t={__proto__:null};for(const s of Object.keys(e))r.indexOf(s)===-1&&(t[s]=e[s]);return t}function Rs(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function be(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function De(e,r,t){return r=e==="+"||e==="#"?Rs(r):be(r),t?be(t)+"="+r:r}function ve(e){return e!=null}function Ar(e){return e===";"||e==="&"||e==="?"}function wn(e,r,t,s){var o=e[t],i=[];if(ve(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(De(r,o,Ar(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(ve).forEach(function(a){i.push(De(r,a,Ar(r)?t:""))}):Object.keys(o).forEach(function(a){ve(o[a])&&i.push(De(r,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(ve).forEach(function(u){a.push(De(r,u))}):Object.keys(o).forEach(function(u){ve(o[u])&&(a.push(be(u)),a.push(De(r,o[u].toString())))}),Ar(r)?i.push(be(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?ve(o)&&i.push(be(t)):o===""&&(r==="&"||r==="?")?i.push(be(t)+"="):o===""&&i.push("");return i}function bn(e){return{expand:yn.bind(null,e)}}function yn(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let u="";const l=[];if(t.indexOf(o.charAt(0))!==-1&&(u=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(d){var g=/([^:\*]*)(?::(\d+)|(\*))?/.exec(d);l.push(wn(r,u,g[1],g[2]||g[3]))}),u&&u!=="+"){var a=",";return u==="?"?a="&":u!=="#"&&(a=u),(l.length!==0?u:"")+l.join(a)}else return l.join(",")}else return Rs(i)}),e==="/"?e:e.replace(/\/$/,"")}function As(e){var g;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=qt(e,["method","baseUrl","url","headers","request","mediaType"]);const a=vn(t);t=bn(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const u=Object.keys(e).filter(m=>a.includes(m)).concat("baseUrl"),l=qt(i,u);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(m=>m.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(g=e.mediaType.previews)!=null&&g.length)){const m=s.accept.match(new RegExp("(?<![\\w-])[\\w-]+(?=-preview)","g"))||[];s.accept=m.concat(e.mediaType.previews).map(f=>{const E=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${f}-preview${E}`}).join(",")}return["GET","HEAD"].includes(r)?t=_n(t,l):"data"in l?o=l.data:Object.keys(l).length&&(o=l),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o>"u"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function kn(e,r,t){return As(Nr(e,r,t))}function Ss(e,r){const t=Nr(e,r),s=kn.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:Ss.bind(null,t),merge:Nr.bind(null,t),parse:As})}var Pn=Ss(null,hn),xt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Gn(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var we={},$t;function On(){if($t)return we;$t=1;const e=function(){};e.prototype=Object.create(null);const r=/; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,t=/\\([\v\u0020-\u00ff])/gu,s=/^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,o={type:"",parameters:new e};Object.freeze(o.parameters),Object.freeze(o);function i(u){if(typeof u!="string")throw new TypeError("argument header is required and must be a string");let l=u.indexOf(";");const d=l!==-1?u.slice(0,l).trim():u.trim();if(s.test(d)===!1)throw new TypeError("invalid media type");const g={type:d.toLowerCase(),parameters:new e};if(l===-1)return g;let m,f,E;for(r.lastIndex=l;f=r.exec(u);){if(f.index!==l)throw new TypeError("invalid parameter format");l+=f[0].length,m=f[1].toLowerCase(),E=f[2],E[0]==='"'&&(E=E.slice(1,E.length-1),t.test(E)&&(E=E.replace(t,"$1"))),g.parameters[m]=E}if(l!==u.length)throw new TypeError("invalid parameter format");return g}function a(u){if(typeof u!="string")return o;let l=u.indexOf(";");const d=l!==-1?u.slice(0,l).trim():u.trim();if(s.test(d)===!1)return o;const g={type:d.toLowerCase(),parameters:new e};if(l===-1)return g;let m,f,E;for(r.lastIndex=l;f=r.exec(u);){if(f.index!==l)return o;l+=f[0].length,m=f[1].toLowerCase(),E=f[2],E[0]==='"'&&(E=E.slice(1,E.length-1),t.test(E)&&(E=E.replace(t,"$1"))),g.parameters[m]=E}return l!==u.length?o:g}return we.default={parse:i,safeParse:a},we.parse=i,we.safeParse=a,we.defaultContentType=o,we}var Rn=On();class Ue extends Error{constructor(t,s,o){super(t);L(this,"name");L(this,"status");L(this,"request");L(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in o&&(this.response=o.response);const i=Object.assign({},o.request);o.request.headers.authorization&&(i.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(new RegExp("(?<! ) .*$")," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var An="10.0.3",Sn={headers:{"user-agent":`octokit-request.js/${An} ${hr()}`}};function Fn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function jt(e){var m,f,E,y,G;const r=((m=e.request)==null?void 0:m.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((f=e.request)==null?void 0:f.log)||console,s=((E=e.request)==null?void 0:E.parseSuccessResponseBody)!==!1,o=Fn(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([v,w])=>[v,String(w)]));let a;try{a=await r(e.url,{method:e.method,body:o,redirect:(y=e.request)==null?void 0:y.redirect,headers:i,signal:(G=e.request)==null?void 0:G.signal,...e.body&&{duplex:"half"}})}catch(v){let w="Unknown Error";if(v instanceof Error){if(v.name==="AbortError")throw v.status=500,v;w=v.message,v.name==="TypeError"&&"cause"in v&&(v.cause instanceof Error?w=v.cause.message:typeof v.cause=="string"&&(w=v.cause))}const P=new Ue(w,500,{request:e});throw P.cause=v,P}const u=a.status,l=a.url,d={};for(const[v,w]of a.headers)d[v]=w;const g={url:l,status:u,headers:d,data:""};if("deprecation"in d){const v=d.link&&d.link.match(/<([^<>]+)>; rel="deprecation"/),w=v&&v.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${d.sunset}${w?`. See ${w}`:""}`)}if(u===204||u===205)return g;if(e.method==="HEAD"){if(u<400)return g;throw new Ue(a.statusText,u,{response:g,request:e})}if(u===304)throw g.data=await Sr(a),new Ue("Not modified",u,{response:g,request:e});if(u>=400)throw g.data=await Sr(a),new Ue(Dn(g.data),u,{response:g,request:e});return g.data=s?await Sr(a):a.body,g}async function Sr(e){var s;const r=e.headers.get("content-type");if(!r)return e.text().catch(()=>"");const t=Rn.safeParse(r);if(Cn(t)){let o="";try{return o=await e.text(),JSON.parse(o)}catch{return o}}else return t.type.startsWith("text/")||((s=t.parameters.charset)==null?void 0:s.toLowerCase())==="utf-8"?e.text().catch(()=>""):e.arrayBuffer().catch(()=>new ArrayBuffer(0))}function Cn(e){return e.type==="application/json"||e.type==="application/scim+json"}function Dn(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function Br(e,r){const t=e.defaults(r);return Object.assign(function(o,i){const a=t.merge(o,i);if(!a.request||!a.request.hook)return jt(t.parse(a));const u=(l,d)=>jt(t.parse(t.merge(l,d)));return Object.assign(u,{endpoint:t,defaults:Br.bind(null,t)}),a.request.hook(u,a)},{endpoint:t,defaults:Br.bind(null,t)})}var Hr=Br(Pn,Sn),Un="0.0.0-development";function Ln(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var In=class extends Error{constructor(r,t,s){super(Ln(s));L(this,"name","GraphqlResponseError");L(this,"errors");L(this,"data");this.request=r,this.headers=t,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},qn=["method","baseUrl","url","headers","request","query","mediaType","operationName"],xn=["query","method","url"],Nt=/\/api\/v3\/?$/;function $n(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(xn.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((a,u)=>qn.includes(u)?(a[u]=s[u],a):(a.variables||(a.variables={}),a.variables[u]=s[u],a),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Nt.test(i)&&(o.url=i.replace(Nt,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const u={};for(const l of Object.keys(a.headers))u[l]=a.headers[l];throw new In(o,u,a.data)}return a.data.data})}function ot(e,r){const t=e.defaults(r);return Object.assign((o,i)=>$n(t,o,i),{defaults:ot.bind(null,t),endpoint:t.endpoint})}ot(Hr,{headers:{"user-agent":`octokit-graphql.js/${Un} ${hr()}`},method:"POST",url:"/graphql"});function jn(e){return ot(e,{method:"POST",url:"/graphql"})}var Fr="(?:[a-zA-Z0-9_-]+)",Bt="\\.",Ht=new RegExp(`^${Fr}${Bt}${Fr}${Bt}${Fr}$`),Nn=Ht.test.bind(Ht);async function Bn(e){const r=Nn(e),t=e.startsWith("v1.")||e.startsWith("ghs_"),s=e.startsWith("ghu_");return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}function Hn(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function Wn(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=Hn(e),r(o)}var Mn=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(Bn.bind(null,r),{hook:Wn.bind(null,r)})};const Fs="7.0.2",Wt=()=>{},Vn=console.warn.bind(console),zn=console.error.bind(console),Mt=`octokit-core.js/${Fs} ${hr()}`;var sr;let Kn=(sr=class{constructor(r={}){L(this,"request");L(this,"graphql");L(this,"log");L(this,"hook");L(this,"auth");const t=new pn.Collection,s={baseUrl:Hr.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=r.userAgent?`${r.userAgent} ${Mt}`:Mt,r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=Hr.defaults(s),this.graphql=jn(this.request).defaults(s),this.log=Object.assign({debug:Wt,info:Wt,warn:Vn,error:zn},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,u=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",u.hook),this.auth=u}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=Mn(r.auth);t.wrap("request",i.hook),this.auth=i}const o=this.constructor;for(let i=0;i<o.plugins.length;++i)Object.assign(this,o.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...s){const o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var o;const t=this.plugins;return o=class extends this{},L(o,"plugins",t.concat(r.filter(i=>!t.includes(i)))),o}},L(sr,"VERSION",Fs),L(sr,"plugins",[]),sr);var Jn="0.0.0-development";function Qn(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)||"total_commits"in e.data))return e;const t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count,i=e.data.total_commits;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count,delete e.data.total_commits;const a=Object.keys(e.data)[0],u=e.data[a];return e.data=u,typeof t<"u"&&(e.data.incomplete_results=t),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e.data.total_commits=i,e}function nt(e,r,t){const s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,i=s.method,a=s.headers;let u=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!u)return{done:!0};try{const l=await o({method:i,url:u,headers:a}),d=Qn(l);if(u=((d.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1],!u&&"total_commits"in d.data){const g=new URL(d.url),m=g.searchParams,f=parseInt(m.get("page")||"1",10),E=parseInt(m.get("per_page")||"250",10);f*E<d.data.total_commits&&(m.set("page",String(f+1)),u=g.toString())}return{value:d}}catch(l){if(l.status!==409)throw l;return u="",{value:{status:200,headers:{},data:[]}}}}})}}function Cs(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),Ds(e,[],nt(e,r,t)[Symbol.asyncIterator](),s)}function Ds(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let i=!1;function a(){i=!0}return r=r.concat(s?s(o.value,a):o.value.data),i?r:Ds(e,r,t,s)})}Object.assign(Cs,{iterator:nt});function Us(e){return{paginate:Object.assign(Cs.bind(null,e),{iterator:nt.bind(null,e)})}}Us.VERSION=Jn;var Yn=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,Xn=class extends Error{constructor(r,t){super(Yn(r.pathInQuery,t));L(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Zn=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);L(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},ei=e=>Object.prototype.toString.call(e)==="[object Object]";function Ls(e){const r=Is(e,"pageInfo");if(r.length===0)throw new Zn(e);return r}var Is=(e,r,t=[])=>{for(const s of Object.keys(e)){const o=[...t,s],i=e[s];if(ei(i)){if(i.hasOwnProperty(r))return o;const a=Is(i,r,o);if(a.length>0)return a}}return[]},$e=(e,r)=>r.reduce((t,s)=>t[s],e),Cr=(e,r,t)=>{const s=r[r.length-1],o=[...r].slice(0,-1),i=$e(e,o);typeof t=="function"?i[s]=t(i[s]):i[s]=t},ri=e=>{const r=Ls(e);return{pathInQuery:r,pageInfo:$e(e,[...r,"pageInfo"])}},qs=e=>e.hasOwnProperty("hasNextPage"),ti=e=>qs(e)?e.endCursor:e.startCursor,si=e=>qs(e)?e.hasNextPage:e.hasPreviousPage,xs=e=>(r,t={})=>{let s=!0,o={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const i=await e.graphql(r,o),a=ri(i),u=ti(a.pageInfo);if(s=si(a.pageInfo),s&&u===o.cursor)throw new Xn(a,u);return o={...o,cursor:u},{done:!1,value:i}}})}},oi=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=Ls(e),s=[...t,"nodes"],o=$e(r,s);o&&Cr(e,s,l=>[...l,...o]);const i=[...t,"edges"],a=$e(r,i);a&&Cr(e,i,l=>[...l,...a]);const u=[...t,"pageInfo"];return Cr(e,u,$e(r,u)),e},ni=e=>{const r=xs(e);return async(t,s={})=>{let o={};for await(const i of r(t,s))o=oi(o,i);return o}};function ii(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(ni(e),{iterator:xs(e)})})}}const ai="16.0.0",ui={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createHostedRunnerForOrg:["POST /orgs/{org}/actions/hosted-runners"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteHostedRunnerForOrg:["DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getHostedRunnerForOrg:["GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],getHostedRunnersGithubOwnedImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/github-owned"],getHostedRunnersLimitsForOrg:["GET /orgs/{org}/actions/hosted-runners/limits"],getHostedRunnersMachineSpecsForOrg:["GET /orgs/{org}/actions/hosted-runners/machine-sizes"],getHostedRunnersPartnerImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/partner"],getHostedRunnersPlatformsForOrg:["GET /orgs/{org}/actions/hosted-runners/platforms"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listGithubHostedRunnersInGroupForOrg:["GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"],listHostedRunnersForOrg:["GET /orgs/{org}/actions/hosted-runners"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateHostedRunnerForOrg:["PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubBillingUsageReportUser:["GET /users/{username}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},campaigns:{createCampaign:["POST /orgs/{org}/campaigns"],deleteCampaign:["DELETE /orgs/{org}/campaigns/{campaign_number}"],getCampaignSummary:["GET /orgs/{org}/campaigns/{campaign_number}"],listOrgCampaigns:["GET /orgs/{org}/campaigns"],updateCampaign:["PATCH /orgs/{org}/campaigns/{campaign_number}"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},credentials:{revoke:["POST /credentials/revoke"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},hostedCompute:{createNetworkConfigurationForOrg:["POST /orgs/{org}/settings/network-configurations"],deleteNetworkConfigurationFromOrg:["DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkConfigurationForOrg:["GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkSettingsForOrg:["GET /orgs/{org}/settings/network-settings/{network_settings_id}"],listNetworkConfigurationsForOrg:["GET /orgs/{org}/settings/network-configurations"],updateNetworkConfigurationForOrg:["PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createIssueType:["POST /orgs/{org}/issue-types"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteIssueType:["DELETE /orgs/{org}/issue-types/{issue_type_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getOrgRulesetHistory:["GET /orgs/{org}/rulesets/{ruleset_id}/history"],getOrgRulesetVersion:["GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listIssueTypes:["GET /orgs/{org}/issue-types"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateIssueType:["PUT /orgs/{org}/issue-types/{issue_type_id}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesetHistory:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"],getRepoRulesetVersion:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues",{},{deprecated:"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests"}],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var li=ui;const _e=new Map;for(const[e,r]of Object.entries(li))for(const[t,s]of Object.entries(r)){const[o,i,a]=s,[u,l]=o.split(/ /),d=Object.assign({method:u,url:l},i);_e.has(e)||_e.set(e,new Map),_e.get(e).set(t,{scope:e,methodName:t,endpointDefaults:d,decorations:a})}const ci={has({scope:e},r){return _e.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[..._e.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];const o=_e.get(r).get(s);if(!o)return;const{endpointDefaults:i,decorations:a}=o;return a?t[s]=di(e,r,s,i,a):t[s]=e.request.defaults(i),t[s]}};function pi(e){const r={};for(const t of _e.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},ci);return r}function di(e,r,t,s,o){const i=e.request.defaults(s);function a(...u){let l=i.endpoint.merge(...u);if(o.mapToData)return l=Object.assign({},l,{data:l[o.mapToData],[o.mapToData]:void 0}),i(l);if(o.renamed){const[d,g]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${d}.${g}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const d=i.endpoint.merge(...u);for(const[g,m]of Object.entries(o.renamedParameters))g in d&&(e.log.warn(`"${g}" parameter is deprecated for "octokit.${r}.${t}()". Use "${m}" instead`),m in d||(d[m]=d[g]),delete d[g]);return i(d)}return i(...u)}return Object.assign(a,i)}function $s(e){return{rest:pi(e)}}$s.VERSION=ai;var or={exports:{}},gi=or.exports,Vt;function hi(){return Vt||(Vt=1,function(e,r){(function(t,s){e.exports=s()})(gi,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof xt<"u"?xt:typeof self<"u"?self:{};function s(k){return k&&k.default||k}var o=function(k,c,n={}){var p,h,_;for(p in c)_=c[p],n[p]=(h=k[p])!=null?h:_;return n},i=function(k,c,n={}){var p,h;for(p in k)h=k[p],c[p]!==void 0&&(n[p]=h);return n},a={load:o,overwrite:i},u;u=class{constructor(c,n){this.incr=c,this.decr=n,this._first=null,this._last=null,this.length=0}push(c){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:c,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var c;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),c=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,c}first(){if(this._first!=null)return this._first.value}getArray(){var c,n,p;for(c=this._first,p=[];c!=null;)p.push((n=c,c=c.next,n.value));return p}forEachShift(c){var n;for(n=this.shift();n!=null;)c(n),n=this.shift()}debug(){var c,n,p,h,_;for(c=this._first,_=[];c!=null;)_.push((n=c,c=c.next,{value:n.value,prev:(p=n.prev)!=null?p.value:void 0,next:(h=n.next)!=null?h.value:void 0}));return _}};var l=u,d;d=class{constructor(c){if(this.instance=c,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,p)=>this._addListener(n,"many",p),this.instance.once=(n,p)=>this._addListener(n,"once",p),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(c,n,p){var h;return(h=this._events)[c]==null&&(h[c]=[]),this._events[c].push({cb:p,status:n}),this.instance}listenerCount(c){return this._events[c]!=null?this._events[c].length:0}async trigger(c,...n){var p,h;try{return c!=="debug"&&this.trigger("debug",`Event triggered: ${c}`,n),this._events[c]==null?void 0:(this._events[c]=this._events[c].filter(function(_){return _.status!=="none"}),h=this._events[c].map(async _=>{var T,b;if(_.status!=="none"){_.status==="once"&&(_.status="none");try{return b=typeof _.cb=="function"?_.cb(...n):void 0,typeof(b!=null?b.then:void 0)=="function"?await b:b}catch(R){return T=R,this.trigger("error",T),null}}}),(await Promise.all(h)).find(function(_){return _!=null}))}catch(_){return p=_,this.trigger("error",p),null}}};var g=d,m,f,E;m=l,f=g,E=class{constructor(c){this.Events=new f(this),this._length=0,this._lists=(function(){var n,p,h;for(h=[],n=1,p=c;1<=p?n<=p:n>=p;1<=p?++n:--n)h.push(new m(()=>this.incr(),()=>this.decr()));return h}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(c){return this._lists[c.options.priority].push(c)}queued(c){return c!=null?this._lists[c].length:this._length}shiftAll(c){return this._lists.forEach(function(n){return n.forEachShift(c)})}getFirst(c=this._lists){var n,p,h;for(n=0,p=c.length;n<p;n++)if(h=c[n],h.length>0)return h;return[]}shiftLastFrom(c){return this.getFirst(this._lists.slice(c).reverse()).shift()}};var y=E,G;G=class extends Error{};var v=G,w,P,C,W,q;W=10,P=5,q=a,w=v,C=class{constructor(c,n,p,h,_,T,b,R){this.task=c,this.args=n,this.rejectOnDrop=_,this.Events=T,this._states=b,this.Promise=R,this.options=q.load(p,h),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===h.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((x,j)=>{this._resolve=x,this._reject=j}),this.retryCount=0}_sanitizePriority(c){var n;return n=~~c!==c?P:c,n<0?0:n>W-1?W-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:c,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(c??new w(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(c){var n;if(n=this._states.jobStatus(this.options.id),!(n===c||c==="DONE"&&n===null))throw new w(`Invalid job status ${n}, expected ${c}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(c,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:c,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(c,n,p,h){var _,T,b;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),T={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",T);try{if(b=await(c!=null?c.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(T),await h(this.options,T),this._assertStatus("DONE"),this._resolve(b)}catch(R){return _=R,this._onFailure(_,T,n,p,h)}}doExpire(c,n,p){var h,_;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),_={args:this.args,options:this.options,retryCount:this.retryCount},h=new w(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(h,_,c,n,p)}async _onFailure(c,n,p,h,_){var T,b;if(p())return T=await this.Events.trigger("failed",c,n),T!=null?(b=~~T,this.Events.trigger("retry",`Retrying ${this.options.id} after ${b} ms`,n),this.retryCount++,h(b)):(this.doDone(n),await _(this.options,n),this._assertStatus("DONE"),this._reject(c))}doDone(c){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",c)}};var M=C,V,oe,ae;ae=a,V=v,oe=class{constructor(c,n,p){this.instance=c,this.storeOptions=n,this.clientId=this.instance._randomIndex(),ae.load(p,p,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var c;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(c=this.heartbeat=setInterval(()=>{var n,p,h,_,T;if(_=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&_>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=_,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&_>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:h,reservoir:T}=this.storeOptions,this._lastReservoirIncrease=_,p=h!=null?Math.min(n,h-T):n,p>0))return this.storeOptions.reservoir+=p,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?c.unref():void 0:clearInterval(this.heartbeat)}async __publish__(c){return await this.yieldLoop(),this.instance.Events.trigger("message",c.toString())}async __disconnect__(c){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(c=0){return new this.Promise(function(n,p){return setTimeout(n,c)})}computePenalty(){var c;return(c=this.storeOptions.penalty)!=null?c:15*this.storeOptions.minTime||5e3}async __updateSettings__(c){return await this.yieldLoop(),ae.overwrite(c,c,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(c){return await this.yieldLoop(),this._nextRequest+this.timeout<c}computeCapacity(){var c,n;return{maxConcurrent:c,reservoir:n}=this.storeOptions,c!=null&&n!=null?Math.min(c-this._running,n):c!=null?c-this._running:n??null}conditionsCheck(c){var n;return n=this.computeCapacity(),n==null||c<=n}async __incrementReservoir__(c){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=c,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(c){return this._unblockTime>=c}check(c,n){return this.conditionsCheck(c)&&this._nextRequest-n<=0}async __check__(c){var n;return await this.yieldLoop(),n=Date.now(),this.check(c,n)}async __register__(c,n,p){var h,_;return await this.yieldLoop(),h=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),_=Math.max(this._nextRequest-h,0),this._nextRequest=h+_+this.storeOptions.minTime,{success:!0,wait:_,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(c,n){var p,h,_;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new V(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return h=Date.now(),_=this.storeOptions.highWater!=null&&c===this.storeOptions.highWater&&!this.check(n,h),p=this.strategyIsBlock()&&(_||this.isBlocked(h)),p&&(this._unblockTime=h+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:_,blocked:p,strategy:this.storeOptions.strategy}}async __free__(c,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var Re=oe,Ae,Ve;Ae=v,Ve=class{constructor(c){this.status=c,this._jobs={},this.counts=this.status.map(function(){return 0})}next(c){var n,p;if(n=this._jobs[c],p=n+1,n!=null&&p<this.status.length)return this.counts[n]--,this.counts[p]++,this._jobs[c]++;if(n!=null)return this.counts[n]--,delete this._jobs[c]}start(c){var n;return n=0,this._jobs[c]=n,this.counts[n]++}remove(c){var n;return n=this._jobs[c],n!=null&&(this.counts[n]--,delete this._jobs[c]),n!=null}jobStatus(c){var n;return(n=this.status[this._jobs[c]])!=null?n:null}statusJobs(c){var n,p,h,_,T;if(c!=null){if(p=this.status.indexOf(c),p<0)throw new Ae(`status must be one of ${this.status.join(", ")}`);h=this._jobs,_=[];for(n in h)T=h[n],T===p&&_.push(n);return _}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((c,n,p)=>(c[this.status[p]]=n,c),{})}};var ze=Ve,Ke,Se;Ke=l,Se=class{constructor(c,n){this.schedule=this.schedule.bind(this),this.name=c,this.Promise=n,this._running=0,this._queue=new Ke}isEmpty(){return this._queue.length===0}async _tryToRun(){var c,n,p,h,_,T,b;if(this._running<1&&this._queue.length>0)return this._running++,{task:b,args:c,resolve:_,reject:h}=this._queue.shift(),n=await async function(){try{return T=await b(...c),function(){return _(T)}}catch(R){return p=R,function(){return h(p)}}}(),this._running--,this._tryToRun(),n()}schedule(c,...n){var p,h,_;return _=h=null,p=new this.Promise(function(T,b){return _=T,h=b}),this._queue.push({task:c,args:n,resolve:_,reject:h}),this._tryToRun(),p}};var fr=Se,Je="2.19.5",_r={version:Je},Qe=Object.freeze({version:Je,default:_r}),U=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Fe=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ye=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Xe,ct,pt,dt,gt,Ze;Ze=a,Xe=g,dt=U,pt=Fe,gt=Ye,ct=(function(){class k{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,Ze.load(this.limiterOptions,this.defaults,this),this.Events=new Xe(this),this.instances={},this.Bottleneck=kt,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new dt(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new pt(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var p;return(p=this.instances[n])!=null?p:(()=>{var h;return h=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",h,n),h})()}async deleteKey(n=""){var p,h;return h=this.instances[n],this.connection&&(p=await this.connection.__runCommand__(["del",...gt.allKeys(`${this.id}-${n}`)])),h!=null&&(delete this.instances[n],await h.disconnect()),h!=null||p>0}limiters(){var n,p,h,_;p=this.instances,h=[];for(n in p)_=p[n],h.push({key:n,limiter:_});return h}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,p,h,_,T,b,R,x,j;if(this.connection==null)return this.Promise.resolve(this.keys());for(b=[],n=null,j=`b_${this.id}-`.length,p=9;n!==0;)for([x,h]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~x,_=0,R=h.length;_<R;_++)T=h[_],b.push(T.slice(j,-p));return b}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var p,h,_,T,b,R;b=Date.now(),_=this.instances,T=[];for(h in _){R=_[h];try{await R._store.__groupCheck__(b)?T.push(this.deleteKey(h)):T.push(void 0)}catch(x){p=x,T.push(R.Events.trigger("error",p))}}return T},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(Ze.overwrite(n,this.defaults,this),Ze.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var p;if(!this.sharedConnection)return(p=this.connection)!=null?p.disconnect(n):void 0}}return k.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},k}).call(t);var Vs=ct,ht,mt,ft;ft=a,mt=g,ht=(function(){class k{constructor(n={}){this.options=n,ft.load(this.options,this.defaults,this),this.Events=new mt(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,p)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var p;return this._arr.push(n),p=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),p}}return k.prototype.defaults={maxTime:null,maxSize:null,Promise},k}).call(t);var zs=ht,Ks=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Js=s(Qe),_t,Et,Er,Tr,Tt,vr,vt,wt,bt,wr,Z,yt=[].splice;vr=10,Et=5,Z=a,vt=y,Tr=M,Tt=Re,wt=Ks,Er=g,bt=ze,wr=fr,_t=(function(){class k{constructor(n={},...p){var h,_;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,p),Z.load(n,this.instanceDefaults,this),this._queues=new vt(vr),this._scheduled={},this._states=new bt(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new Er(this),this._submitLock=new wr("submit",this.Promise),this._registerLock=new wr("register",this.Promise),_=Z.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return h=Z.load(n,this.redisStoreDefaults,{}),new wt(this,_,h);if(this.datastore==="local")return h=Z.load(n,this.localStoreDefaults,{}),new Tt(this,_,h);throw new k.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var T;return(T=this._store.heartbeat)!=null&&typeof T.ref=="function"?T.ref():void 0}),this._queues.on("zero",()=>{var T;return(T=this._store.heartbeat)!=null&&typeof T.unref=="function"?T.unref():void 0})}_validateOptions(n,p){if(!(n!=null&&typeof n=="object"&&p.length===0))throw new k.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,p,h,_){var T,b;try{if({running:b}=await this._store.__free__(n,h.weight),this.Events.trigger("debug",`Freed ${h.id}`,_),b===0&&this.empty())return this.Events.trigger("idle")}catch(R){return T=R,this.Events.trigger("error",T)}}_run(n,p,h){var _,T,b;return p.doRun(),_=this._clearGlobalState.bind(this,n),b=this._run.bind(this,n,p),T=this._free.bind(this,n,p),this._scheduled[n]={timeout:setTimeout(()=>p.doExecute(this._limiter,_,b,T),h),expiration:p.options.expiration!=null?setTimeout(function(){return p.doExpire(_,b,T)},h+p.options.expiration):void 0,job:p}}_drainOne(n){return this._registerLock.schedule(()=>{var p,h,_,T,b;return this.queued()===0?this.Promise.resolve(null):(b=this._queues.getFirst(),{options:T,args:p}=_=b.first(),n!=null&&T.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${T.id}`,{args:p,options:T}),h=this._randomIndex(),this._store.__register__(h,T.weight,T.expiration).then(({success:R,wait:x,reservoir:j})=>{var Ce;return this.Events.trigger("debug",`Drained ${T.id}`,{success:R,args:p,options:T}),R?(b.shift(),Ce=this.empty(),Ce&&this.Events.trigger("empty"),j===0&&this.Events.trigger("depleted",Ce),this._run(h,_,x),this.Promise.resolve(T.weight)):this.Promise.resolve(null)})))})}_drainAll(n,p=0){return this._drainOne(n).then(h=>{var _;return h!=null?(_=n!=null?n-h:n,this._drainAll(_,p+h)):this.Promise.resolve(p)}).catch(h=>this.Events.trigger("error",h))}_dropAllQueued(n){return this._queues.shiftAll(function(p){return p.doDrop({message:n})})}stop(n={}){var p,h;return n=Z.load(n,this.stopDefaults),h=_=>{var T;return T=()=>{var b;return b=this._states.counts,b[0]+b[1]+b[2]+b[3]===_},new this.Promise((b,R)=>T()?b():this.on("done",()=>{if(T())return this.removeAllListeners("done"),b()}))},p=n.dropWaitingJobs?(this._run=function(_,T){return T.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var _,T,b;T=this._scheduled;for(_ in T)b=T[_],this.jobStatus(b.job.options.id)==="RUNNING"&&(clearTimeout(b.timeout),clearTimeout(b.expiration),b.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),h(0)}))):this.schedule({priority:vr-1,weight:0},()=>h(1)),this._receive=function(_){return _._reject(new k.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new k.prototype.BottleneckError("stop() has already been called")),p}async _addToQueue(n){var p,h,_,T,b,R,x;({args:p,options:T}=n);try{({reachedHWM:b,blocked:h,strategy:x}=await this._store.__submit__(this.queued(),T.weight))}catch(j){return _=j,this.Events.trigger("debug",`Could not queue ${T.id}`,{args:p,options:T,error:_}),n.doDrop({error:_}),!1}return h?(n.doDrop(),!0):b&&(R=x===k.prototype.strategy.LEAK?this._queues.shiftLastFrom(T.priority):x===k.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(T.priority+1):x===k.prototype.strategy.OVERFLOW?n:void 0,R!=null&&R.doDrop(),R==null||x===k.prototype.strategy.OVERFLOW)?(R==null&&n.doDrop(),b):(n.doQueue(b,h),this._queues.push(n),await this._drainAll(),b)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new k.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var p,h,_,T,b,R,x;return typeof n[0]=="function"?(b=n,[h,...n]=b,[p]=yt.call(n,-1),T=Z.load({},this.jobDefaults)):(R=n,[T,h,...n]=R,[p]=yt.call(n,-1),T=Z.load(T,this.jobDefaults)),x=(...j)=>new this.Promise(function(Ce,Ys){return h(...j,function(...Pt){return(Pt[0]!=null?Ys:Ce)(Pt)})}),_=new Tr(x,n,T,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),_.promise.then(function(j){return typeof p=="function"?p(...j):void 0}).catch(function(j){return Array.isArray(j)?typeof p=="function"?p(...j):void 0:typeof p=="function"?p(j):void 0}),this._receive(_)}schedule(...n){var p,h,_;return typeof n[0]=="function"?([_,...n]=n,h={}):[h,_,...n]=n,p=new Tr(_,n,h,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(p),p.promise}wrap(n){var p,h;return p=this.schedule.bind(this),h=function(..._){return p(n.bind(this),..._)},h.withOptions=function(_,...T){return p(_,n,...T)},h}async updateSettings(n={}){return await this._store.__updateSettings__(Z.overwrite(n,this.storeDefaults)),Z.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return k.default=k,k.Events=Er,k.version=k.prototype.version=Js.version,k.strategy=k.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},k.BottleneckError=k.prototype.BottleneckError=v,k.Group=k.prototype.Group=Vs,k.RedisConnection=k.prototype.RedisConnection=U,k.IORedisConnection=k.prototype.IORedisConnection=Fe,k.Batcher=k.prototype.Batcher=zs,k.prototype.jobDefaults={priority:Et,weight:1,expiration:null,id:"<no-id>"},k.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:k.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},k.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},k.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},k.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},k.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},k}).call(t);var kt=_t,Qs=kt;return Qs})}(or)),or.exports}var mi=hi();const js=Gn(mi);var fi="0.0.0-development";async function Ns(e,r,t,s){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const o=s.request.retries!=null?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,o,i)}throw t}async function _i(e,r,t,s){const o=new js;return o.on("failed",function(i,a){const u=~~i.request.request.retries,l=~~i.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,u>a.retryCount)return l*e.retryAfterBaseValue}),o.schedule(Ei.bind(null,e,r,t),s)}async function Ei(e,r,t,s){const o=await t(t,s);if(o.data&&o.data.errors&&o.data.errors.length>0&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const i=new Ue(o.data.errors[0].message,500,{request:s,response:o});return Ns(e,r,i,s)}return o}function Bs(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,410,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",Ns.bind(null,t,e)),e.hook.wrap("request",_i.bind(null,t,e))),{retry:{retryRequest:(s,o,i)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:i}),s)}}}Bs.VERSION=fi;var Ti="0.0.0-development",Dr=()=>Promise.resolve();function vi(e,r,t){return e.retryLimiter.schedule(wi,e,r,t)}async function wi(e,r,t){const{pathname:s}=new URL(t.url,"http://github.test"),o=bi(t.method,s),i=!o&&t.method!=="GET"&&t.method!=="HEAD",a=t.method==="GET"&&s.startsWith("/search/"),u=s.startsWith("/graphql"),d=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(d.expiration=1e3*60),(i||u)&&await e.write.key(e.id).schedule(d,Dr),i&&e.triggersNotification(s)&&await e.notifications.key(e.id).schedule(d,Dr),a&&await e.search.key(e.id).schedule(d,Dr);const g=(o?e.auth:e.global).key(e.id).schedule(d,r,t);if(u){const m=await g;if(m.data.errors!=null&&m.data.errors.some(f=>f.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:m,data:m.data})}return g}function bi(e,r){return e==="PATCH"&&/^\/applications\/[^/]+\/token\/scoped$/.test(r)||e==="POST"&&(/^\/applications\/[^/]+\/token$/.test(r)||/^\/app\/installations\/[^/]+\/access_tokens$/.test(r)||r==="/login/oauth/access_token")}var yi=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/issues/{issue_number}/sub_issue","/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function ki(e){const t=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var zt=ki(yi),Hs=zt.test.bind(zt),he={},Pi=function(e,r){he.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),he.auth=new e.Group({id:"octokit-auth",maxConcurrent:1,...r}),he.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),he.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),he.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function it(e,r){const{enabled:t=!0,Bottleneck:s=js,id:o="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const u={timeout:i};typeof a<"u"&&(u.connection=a),he.global==null&&Pi(s,u);const l=Object.assign({clustering:a!=null,triggersNotification:Hs,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...he},r.throttle);if(typeof l.onSecondaryRateLimit!="function"||typeof l.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const d={},g=new s.Events(d);return d.on("secondary-limit",l.onSecondaryRateLimit),d.on("rate-limit",l.onRateLimit),d.on("error",m=>e.log.warn("Error in throttling-plugin limit handler",m)),l.retryLimiter.on("failed",async function(m,f){const[E,y,G]=f.args,{pathname:v}=new URL(G.url,"http://github.test");if(!(v.startsWith("/graphql")&&m.status!==401||m.status===403||m.status===429))return;const P=~~y.retryCount;y.retryCount=P,G.request.retryCount=P;const{wantRetry:C,retryAfter:W=0}=await async function(){var q;if(/\bsecondary rate\b/i.test(m.message)){const M=Number(m.response.headers["retry-after"])||E.fallbackSecondaryRateRetryAfter;return{wantRetry:await g.trigger("secondary-limit",M,G,e,P),retryAfter:M}}if(m.response.headers!=null&&m.response.headers["x-ratelimit-remaining"]==="0"||(((q=m.response.data)==null?void 0:q.errors)??[]).some(M=>M.type==="RATE_LIMITED")){const M=new Date(~~m.response.headers["x-ratelimit-reset"]*1e3).getTime(),V=Math.max(Math.ceil((M-Date.now())/1e3)+1,0);return{wantRetry:await g.trigger("rate-limit",V,G,e,P),retryAfter:V}}return{}}();if(C)return y.retryCount++,W*E.retryAfterBaseValue}),e.hook.wrap("request",vi.bind(null,l)),{}}it.VERSION=Ti;it.triggersNotification=Hs;var Gi="0.0.0-development",Ws=Kn.plugin($s,Us,ii,Bs,it).defaults({userAgent:`octokit.js/${Gi}`,throttle:{onRateLimit:Oi,onSecondaryRateLimit:Ri}});function Oi(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function Ri(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}const at="phatelot",ut="nina",lt="main";let Oe,Ur=(()=>{const e=Ms()||"";return e&&(Oe=new Ws({auth:e})),e})();function mr(){return!!Oe}function Ai(e){Ur=e,localStorage.setItem("nina-admin",Ur),Oe=new Ws({auth:Ur})}function Ms(){return localStorage.getItem("nina-admin")}async function Si(e,r){return Ci(`${Fi(e)}.png`,r)}function Fi(e){let r=`${e}`;return"0".repeat(3-r.length)+r}async function Ci(e,r,t){if(!mr())throw new Error("please fill in Github token");return await Oe.request("PUT /repos/{owner}/{repo}/contents/{path}",{owner:at,repo:ut,branch:lt,path:`public/images/${e}`,message:`add ${e} [skip ci]`,content:r})}async function Di(e,r){if(!mr())throw new Error("please fill in Github token");return await Oe.request("PUT /repos/{owner}/{repo}/contents/{path}",{owner:at,repo:ut,branch:lt,path:"src/lib/weighings.json",message:"update weighins",content:window.btoa(JSON.stringify({$schema:"./schema.json",weighings:e},null,2)),sha:r})}async function Ui(){if(!mr())throw new Error("please fill in Github token");return await Oe.request("GET /repos/{owner}/{repo}/contents/{path}",{owner:at,repo:ut,branch:lt,path:"src/lib/weighings.json"}).then(e=>{const{content:r,sha:t}=e.data;return{data:JSON.parse(window.atob(r)).weighings,sha:t}})}var Li=Me("<li> </li>"),Ii=(e,r,t)=>r(O(t)),qi=Me('<ol></ol> <form><label>Nina image <input type="file"/></label> <label>Day <input type="number" min="0"/></label> <label>Weight in lbs <input type="number" min="0"/></label> <label>Use new shirt <input type="checkbox"/></label> <label>Use new shorts <input type="checkbox"/></label> <label>New plateau <input type="checkbox"/></label> <label>Use new scale <input type="checkbox"/></label></form> <button>Upload weighing</button>',1),xi=Me("<h1>List / upload weighins</h1> <!>",1);function $i(e,r){Qr(r,!0);let t=$(""),s=$(le(d())),o=$(0),i=$(!1),a=$(!1),u=$(!1),l=$(!1);function d(){const v=new Date("2025-04-30T16:00:00Z"),w=new Date().getTime()-v.getTime();return Math.floor(w/(86400*1e3))}function g(v){var C;const w=(C=v.target.files)==null?void 0:C[0];if(!w)return;const P=new FileReader;P.onload=()=>{D(t,P.result.split(",")[1],!0)},P.readAsDataURL(w)}function m(v){return v?1:0}async function f(v){const w=v.data[v.data.length-1];v.data.push({day:O(s),weightInLbs:O(o),scale:w.scale+m(O(l)),shirt:w.shirt+m(O(i)),shorts:w.shorts+m(O(a)),plateau:w.plateau}),await Si(v.data.length,O(t)),await Di(v.data,v.sha),D(t,""),D(s,0),D(o,0)}function E(){return!mr()||!O(t)||!O(s)||!O(o)}var y=xi(),G=F(Ir(y),2);Yo(G,Ui,v=>{var w=Ft("Loading data...");ge(v,w)},(v,w)=>{var P=qi(),C=Ir(P);en(C,21,()=>O(w).data,Xo,(U,Fe)=>{var Ye=Li(),Xe=N(Ye);kr(()=>Ct(Xe,`Day ${O(Fe).day??""}: ${O(Fe).weightInLbs??""}lbs`)),ge(U,Ye)});var W=F(C,2),q=N(W),M=F(N(q));M.__change=g;var V=F(q,2),oe=F(N(V)),ae=F(V,2),Re=F(N(ae)),Ae=F(ae,2),Ve=F(N(Ae)),ze=F(Ae,2),Ke=F(N(ze)),Se=F(ze,2),fr=F(N(Se)),Je=F(Se,2),_r=F(N(Je)),Qe=F(W,2);Qe.__click=[Ii,f,w],kr(U=>Qe.disabled=U,[E]),jr(oe,()=>O(s),U=>D(s,U)),jr(Re,()=>O(o),U=>D(o,U)),tr(Ve,()=>O(i),U=>D(i,U)),tr(Ke,()=>O(a),U=>D(a,U)),tr(fr,()=>O(u),U=>D(u,U)),tr(_r,()=>O(l),U=>D(l,U)),ge(v,P)},(v,w)=>{var P=Ft();kr(()=>Ct(P,O(w))),ge(v,P)}),ge(e,y),Yr()}st(["change","click"]);var ji=(e,r)=>Ai(O(r)),Ni=Me('<h1>Set up Github token</h1> <form><label>Token <input type="password"/></label></form>',1);function Bi(e,r){Qr(r,!0);let t=$(le(Ms()||""));var s=Ni(),o=F(Ir(s),2),i=N(o),a=F(N(i));a.__change=[ji,t],jr(a,()=>O(t),u=>D(t,u)),ge(e,s),Yr()}st(["change"]);var Hi=(e,r)=>r("/"),Wi=(e,r)=>r("/token"),Mi=Me('<main class="container-fluid"><nav><ul><li><strong>Nina admin</strong></li></ul> <ul><li><a href="#/" class="contrast">Weighins</a></li> <li><a href="#/token" class="secondary">Token</a></li></ul></nav> <!></main>');function Vi(e){let r=$(le(t()));function t(){return location.hash.slice(1)||"/"}window.addEventListener("hashchange",()=>{D(r,t(),!0)});function s(y){location.hash=y}const o={"/":$i,"/token":Bi},i=To(()=>o[O(r)]??o["/"]);var a=Mi(),u=N(a),l=F(N(u),2),d=N(l),g=N(d);g.__click=[Hi,s];var m=F(d,2),f=N(m);f.__click=[Wi,s];var E=F(u,2);on(E,()=>O(i),(y,G)=>{G(y,{})}),ge(e,a)}st(["click"]);Ko(Vi,{target:document.getElementById("app")});
