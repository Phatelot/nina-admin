var Ys=Object.defineProperty;var Xs=(e,r,t)=>r in e?Ys(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var F=(e,r,t)=>Xs(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();const vt=!1;var Cr=Array.isArray,Zs=Array.prototype.indexOf,Dr=Array.from,eo=Object.defineProperty,Ce=Object.getOwnPropertyDescriptor,ro=Object.prototype,to=Array.prototype,so=Object.getPrototypeOf,wt=Object.isExtensible;function oo(e){return typeof(e==null?void 0:e.then)=="function"}function Ht(e){for(var r=0;r<e.length;r++)e[r]()}const X=2,Wt=4,er=8,Ur=16,ce=32,Pe=64,Lr=128,J=256,Je=512,Q=1024,ie=2048,_e=4096,ne=8192,Ir=16384,Mt=32768,qr=65536,no=1<<19,Vt=1<<20,yr=1<<21,cr=Symbol("$state");function zt(e){return e===this.v}function io(e,r){return e!=e?r==r:e!==r||e!==null&&typeof e=="object"||typeof e=="function"}function Kt(e){return!io(e,this.v)}function ao(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function uo(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function lo(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function co(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let po=!1;const go=1,ho=2,mo=16,fo=1,_o=2,$=Symbol();let te=null;function Qe(e){te=e}function xr(e,r=!1,t){var s=te={p:te,c:null,d:!1,e:null,m:!1,s:e,x:null,l:null};Go(()=>{s.d=!0})}function $r(e){const r=te;if(r!==null){const a=r.e;if(a!==null){var t=S,s=R;r.e=null;try{for(var o=0;o<a.length;o++){var i=a[o];se(i.effect),Y(i.reaction),Ro(i.fn)}}finally{se(t),Y(s)}}te=r.p,r.m=!0}return{}}function Jt(){return!0}function ge(e){if(typeof e!="object"||e===null||cr in e)return e;const r=so(e);if(r!==ro&&r!==to)return e;var t=new Map,s=Cr(e),o=B(0),i=R,a=u=>{var l=R;Y(i);var d=u();return Y(l),d};return s&&t.set("length",B(e.length)),new Proxy(e,{defineProperty(u,l,d){(!("value"in d)||d.configurable===!1||d.enumerable===!1||d.writable===!1)&&uo();var h=t.get(l);return h===void 0?h=a(()=>{var g=B(d.value);return t.set(l,g),g}):U(h,d.value,!0),!0},deleteProperty(u,l){var d=t.get(l);if(d===void 0){if(l in u){const m=a(()=>B($));t.set(l,m),pr(o)}}else{if(s&&typeof l=="string"){var h=t.get("length"),g=Number(l);Number.isInteger(g)&&g<h.v&&U(h,g)}U(d,$),pr(o)}return!0},get(u,l,d){var E;if(l===cr)return e;var h=t.get(l),g=l in u;if(h===void 0&&(!g||(E=Ce(u,l))!=null&&E.writable)&&(h=a(()=>{var v=ge(g?u[l]:$),P=B(v);return P}),t.set(l,h)),h!==void 0){var m=A(h);return m===$?void 0:m}return Reflect.get(u,l,d)},getOwnPropertyDescriptor(u,l){var d=Reflect.getOwnPropertyDescriptor(u,l);if(d&&"value"in d){var h=t.get(l);h&&(d.value=A(h))}else if(d===void 0){var g=t.get(l),m=g==null?void 0:g.v;if(g!==void 0&&m!==$)return{enumerable:!0,configurable:!0,value:m,writable:!0}}return d},has(u,l){var m;if(l===cr)return!0;var d=t.get(l),h=d!==void 0&&d.v!==$||Reflect.has(u,l);if(d!==void 0||S!==null&&(!h||(m=Ce(u,l))!=null&&m.writable)){d===void 0&&(d=a(()=>{var E=h?ge(u[l]):$,v=B(E);return v}),t.set(l,d));var g=A(d);if(g===$)return!1}return h},set(u,l,d,h){var L;var g=t.get(l),m=l in u;if(s&&l==="length")for(var E=d;E<g.v;E+=1){var v=t.get(E+"");v!==void 0?U(v,$):E in u&&(v=a(()=>B($)),t.set(E+"",v))}if(g===void 0)(!m||(L=Ce(u,l))!=null&&L.writable)&&(g=a(()=>B(void 0)),U(g,ge(d)),t.set(l,g));else{m=g.v!==$;var P=a(()=>ge(d));U(g,P)}var y=Reflect.getOwnPropertyDescriptor(u,l);if(y!=null&&y.set&&y.set.call(h,d),!m){if(s&&typeof l=="string"){var k=t.get("length"),G=Number(l);Number.isInteger(G)&&G>=k.v&&U(k,G+1)}pr(o)}return!0},ownKeys(u){A(o);var l=Reflect.ownKeys(u).filter(g=>{var m=t.get(g);return m===void 0||m.v!==$});for(var[d,h]of t)h.v!==$&&!(d in u)&&l.push(d);return l},setPrototypeOf(){lo()}})}function pr(e,r=1){U(e,e.v+r)}function jr(e){var r=X|ie,t=R!==null&&(R.f&X)!==0?R:null;return S===null||t!==null&&(t.f&J)!==0?r|=J:S.f|=Vt,{ctx:te,deps:null,effects:null,equals:zt,f:r,fn:e,reactions:null,rv:0,v:null,wv:0,parent:t??S}}function Eo(e){const r=jr(e);return ps(r),r}function To(e){const r=jr(e);return r.equals=Kt,r}function Qt(e){var r=e.effects;if(r!==null){e.effects=null;for(var t=0;t<r.length;t+=1)le(r[t])}}function vo(e){for(var r=e.parent;r!==null;){if((r.f&X)===0)return r;r=r.parent}return null}function Yt(e){var r,t=S;se(vo(e));try{Qt(e),r=ms(e)}finally{se(t)}return r}function Xt(e){var r=Yt(e);if(e.equals(r)||(e.v=r,e.wv=gs()),!Ne){var t=(ue||(e.f&J)!==0)&&e.deps!==null?_e:Q;oe(e,t)}}const qe=new Map;function ke(e,r){var t={f:0,v:e,reactions:null,equals:zt,rv:0,wv:0};return t}function B(e,r){const t=ke(e);return ps(t),t}function wo(e,r=!1,t=!0){const s=ke(e);return r||(s.equals=Kt),s}function U(e,r,t=!1){R!==null&&!re&&Jt()&&(R.f&(X|Ur))!==0&&!(C!=null&&C[1].includes(e)&&C[0]===R)&&co();let s=t?ge(r):r;return De(e,s)}function De(e,r){if(!e.equals(r)){var t=e.v;Ne?qe.set(e,r):qe.set(e,t),e.v=r,(e.f&X)!==0&&((e.f&ie)!==0&&Yt(e),oe(e,(e.f&J)===0?Q:_e)),e.wv=gs(),Zt(e,ie),S!==null&&(S.f&Q)!==0&&(S.f&(ce|Pe))===0&&(K===null?Lo([e]):K.push(e))}return r}function Zt(e,r){var t=e.reactions;if(t!==null)for(var s=t.length,o=0;o<s;o++){var i=t[o],a=i.f;(a&ie)===0&&(oe(i,r),(a&(Q|J))!==0&&((a&X)!==0?Zt(i,_e):Wr(i)))}}let bo=!1;var bt,es,rs,ts;function yo(){if(bt===void 0){bt=window,es=/Firefox/.test(navigator.userAgent);var e=Element.prototype,r=Node.prototype,t=Text.prototype;rs=Ce(r,"firstChild").get,ts=Ce(r,"nextSibling").get,wt(e)&&(e.__click=void 0,e.__className=void 0,e.__attributes=null,e.__style=void 0,e.__e=void 0),wt(t)&&(t.__t=void 0)}}function Nr(e=""){return document.createTextNode(e)}function Ye(e){return rs.call(e)}function rr(e){return ts.call(e)}function V(e,r){return Ye(e)}function kr(e,r){{var t=Ye(e);return t instanceof Comment&&t.data===""?rr(t):t}}function j(e,r=1,t=!1){let s=e;for(;r--;)s=rr(s);return s}function ko(e){e.textContent=""}function Po(e,r){var t=r.last;t===null?r.last=r.first=e:(t.next=e,e.prev=t,r.last=e)}function Ge(e,r,t,s=!0){var o=S,i={ctx:te,deps:null,nodes_start:null,nodes_end:null,f:e|ie,first:null,fn:r,last:null,next:null,parent:o,prev:null,teardown:null,transitions:null,wv:0};if(t)try{Hr(i),i.f|=Mt}catch(l){throw le(i),l}else r!==null&&Wr(i);var a=t&&i.deps===null&&i.first===null&&i.nodes_start===null&&i.teardown===null&&(i.f&(Vt|Lr))===0;if(!a&&s&&(o!==null&&Po(i,o),R!==null&&(R.f&X)!==0)){var u=R;(u.effects??(u.effects=[])).push(i)}return i}function Go(e){const r=Ge(er,null,!1);return oe(r,Q),r.teardown=e,r}function Oo(e){const r=Ge(Pe,e,!0);return(t={})=>new Promise(s=>{t.outro?ye(r,()=>{le(r),s(void 0)}):(le(r),s(void 0))})}function Ro(e){return Ge(Wt,e,!1)}function ss(e){return Ge(er,e,!0)}function dr(e,r=[],t=jr){const s=r.map(t);return tr(()=>e(...s.map(A)))}function tr(e,r=0){return Ge(er|Ur|r,e,!0)}function he(e,r=!0){return Ge(er|ce,e,!0,r)}function os(e){var r=e.teardown;if(r!==null){const t=Ne,s=R;yt(!0),Y(null);try{r.call(null)}finally{yt(t),Y(s)}}}function ns(e,r=!1){var t=e.first;for(e.first=e.last=null;t!==null;){var s=t.next;(t.f&Pe)!==0?t.parent=null:le(t,r),t=s}}function Ao(e){for(var r=e.first;r!==null;){var t=r.next;(r.f&ce)===0&&le(r),r=t}}function le(e,r=!0){var t=!1;(r||(e.f&no)!==0)&&e.nodes_start!==null&&e.nodes_end!==null&&(So(e.nodes_start,e.nodes_end),t=!0),ns(e,r&&!t),Ze(e,0),oe(e,Ir);var s=e.transitions;if(s!==null)for(const i of s)i.stop();os(e);var o=e.parent;o!==null&&o.first!==null&&is(e),e.next=e.prev=e.teardown=e.ctx=e.deps=e.fn=e.nodes_start=e.nodes_end=null}function So(e,r){for(;e!==null;){var t=e===r?null:rr(e);e.remove(),e=t}}function is(e){var r=e.parent,t=e.prev,s=e.next;t!==null&&(t.next=s),s!==null&&(s.prev=t),r!==null&&(r.first===e&&(r.first=s),r.last===e&&(r.last=t))}function ye(e,r){var t=[];Br(e,t,!0),as(t,()=>{le(e),r&&r()})}function as(e,r){var t=e.length;if(t>0){var s=()=>--t||r();for(var o of e)o.out(s)}else r()}function Br(e,r,t){if((e.f&ne)===0){if(e.f^=ne,e.transitions!==null)for(const a of e.transitions)(a.is_global||t)&&r.push(a);for(var s=e.first;s!==null;){var o=s.next,i=(s.f&qr)!==0||(s.f&ce)!==0;Br(s,r,i?t:!1),s=o}}}function Ue(e){us(e,!0)}function us(e,r){if((e.f&ne)!==0){e.f^=ne;for(var t=e.first;t!==null;){var s=t.next,o=(t.f&qr)!==0||(t.f&ce)!==0;us(t,o?r:!1),t=s}if(e.transitions!==null)for(const i of e.transitions)(i.is_global||r)&&i.in()}}let xe=[],Pr=[];function ls(){var e=xe;xe=[],Ht(e)}function Fo(){var e=Pr;Pr=[],Ht(e)}function Co(e){xe.length===0&&queueMicrotask(ls),xe.push(e)}function Do(){xe.length>0&&ls(),Pr.length>0&&Fo()}function Uo(e){var r=S;if((r.f&Mt)===0){if((r.f&Lr)===0)throw e;r.fn(e)}else cs(e,r)}function cs(e,r){for(;r!==null;){if((r.f&Lr)!==0)try{r.fn(e);return}catch{}r=r.parent}throw e}let $e=!1,je=null,me=!1,Ne=!1;function yt(e){Ne=e}let Le=[];let R=null,re=!1;function Y(e){R=e}let S=null;function se(e){S=e}let C=null;function ps(e){R!==null&&R.f&yr&&(C===null?C=[R,[e]]:C[1].push(e))}let N=null,M=0,K=null;function Lo(e){K=e}let ds=1,Xe=0,ue=!1;function gs(){return++ds}function sr(e){var g;var r=e.f;if((r&ie)!==0)return!0;if((r&_e)!==0){var t=e.deps,s=(r&J)!==0;if(t!==null){var o,i,a=(r&Je)!==0,u=s&&S!==null&&!ue,l=t.length;if(a||u){var d=e,h=d.parent;for(o=0;o<l;o++)i=t[o],(a||!((g=i==null?void 0:i.reactions)!=null&&g.includes(d)))&&(i.reactions??(i.reactions=[])).push(d);a&&(d.f^=Je),u&&h!==null&&(h.f&J)===0&&(d.f^=J)}for(o=0;o<l;o++)if(i=t[o],sr(i)&&Xt(i),i.wv>e.wv)return!0}(!s||S!==null&&!ue)&&oe(e,Q)}return!1}function hs(e,r,t=!0){var s=e.reactions;if(s!==null)for(var o=0;o<s.length;o++){var i=s[o];C!=null&&C[1].includes(e)&&C[0]===R||((i.f&X)!==0?hs(i,r,!1):r===i&&(t?oe(i,ie):(i.f&Q)!==0&&oe(i,_e),Wr(i)))}}function ms(e){var E;var r=N,t=M,s=K,o=R,i=ue,a=C,u=te,l=re,d=e.f;N=null,M=0,K=null,ue=(d&J)!==0&&(re||!me||R===null),R=(d&(ce|Pe))===0?e:null,C=null,Qe(e.ctx),re=!1,Xe++,e.f|=yr;try{var h=(0,e.fn)(),g=e.deps;if(N!==null){var m;if(Ze(e,M),g!==null&&M>0)for(g.length=M+N.length,m=0;m<N.length;m++)g[M+m]=N[m];else e.deps=g=N;if(!ue)for(m=M;m<g.length;m++)((E=g[m]).reactions??(E.reactions=[])).push(e)}else g!==null&&M<g.length&&(Ze(e,M),g.length=M);if(Jt()&&K!==null&&!re&&g!==null&&(e.f&(X|_e|ie))===0)for(m=0;m<K.length;m++)hs(K[m],e);return o!==null&&o!==e&&(Xe++,K!==null&&(s===null?s=K:s.push(...K))),h}catch(v){Uo(v)}finally{N=r,M=t,K=s,R=o,ue=i,C=a,Qe(u),re=l,e.f^=yr}}function Io(e,r){let t=r.reactions;if(t!==null){var s=Zs.call(t,e);if(s!==-1){var o=t.length-1;o===0?t=r.reactions=null:(t[s]=t[o],t.pop())}}t===null&&(r.f&X)!==0&&(N===null||!N.includes(r))&&(oe(r,_e),(r.f&(J|Je))===0&&(r.f^=Je),Qt(r),Ze(r,0))}function Ze(e,r){var t=e.deps;if(t!==null)for(var s=r;s<t.length;s++)Io(e,t[s])}function Hr(e){var r=e.f;if((r&Ir)===0){oe(e,Q);var t=S,s=me;S=e,me=!0;try{(r&Ur)!==0?Ao(e):ns(e),os(e);var o=ms(e);e.teardown=typeof o=="function"?o:null,e.wv=ds;var i;vt&&po&&(e.f&ie)!==0&&e.deps}finally{me=s,S=t}}}function qo(){try{ao()}catch(e){if(je!==null)cs(e,je);else throw e}}function fs(){var e=me;try{var r=0;for(me=!0;Le.length>0;){r++>1e3&&qo();var t=Le,s=t.length;Le=[];for(var o=0;o<s;o++){var i=$o(t[o]);xo(i)}qe.clear()}}finally{$e=!1,me=e,je=null}}function xo(e){var r=e.length;if(r!==0)for(var t=0;t<r;t++){var s=e[t];(s.f&(Ir|ne))===0&&sr(s)&&(Hr(s),s.deps===null&&s.first===null&&s.nodes_start===null&&(s.teardown===null?is(s):s.fn=null))}}function Wr(e){$e||($e=!0,queueMicrotask(fs));for(var r=je=e;r.parent!==null;){r=r.parent;var t=r.f;if((t&(Pe|ce))!==0){if((t&Q)===0)return;r.f^=Q}}Le.push(r)}function $o(e){for(var r=[],t=e;t!==null;){var s=t.f,o=(s&(ce|Pe))!==0,i=o&&(s&Q)!==0;if(!i&&(s&ne)===0){(s&Wt)!==0?r.push(t):o?t.f^=Q:sr(t)&&Hr(t);var a=t.first;if(a!==null){t=a;continue}}var u=t.parent;for(t=t.next;t===null&&u!==null;)t=u.next,u=u.parent}return r}function jo(e){for(var r;;){if(Do(),Le.length===0)return $e=!1,je=null,r;$e=!0,fs()}}function A(e){var r=e.f,t=(r&X)!==0;if(R!==null&&!re){if(!(C!=null&&C[1].includes(e))||C[0]!==R){var s=R.deps;e.rv<Xe&&(e.rv=Xe,N===null&&s!==null&&s[M]===e?M++:N===null?N=[e]:(!ue||!N.includes(e))&&N.push(e))}}else if(t&&e.deps===null&&e.effects===null){var o=e,i=o.parent;i!==null&&(i.f&J)===0&&(o.f^=J)}return t&&(o=e,sr(o)&&Xt(o)),Ne&&qe.has(e)?qe.get(e):e.v}function _s(e){var r=re;try{return re=!0,e()}finally{re=r}}const No=-7169;function oe(e,r){e.f=e.f&No|r}const Bo=["touchstart","touchmove"];function Ho(e){return Bo.includes(e)}let kt=!1;function Wo(){kt||(kt=!0,document.addEventListener("reset",e=>{Promise.resolve().then(()=>{var r;if(!e.defaultPrevented)for(const t of e.target.elements)(r=t.__on_r)==null||r.call(t)})},{capture:!0}))}function Mo(e){var r=R,t=S;Y(null),se(null);try{return e()}finally{Y(r),se(t)}}function Es(e,r,t,s=t){e.addEventListener(r,()=>Mo(t));const o=e.__on_r;o?e.__on_r=()=>{o(),s(!0)}:e.__on_r=()=>s(!0),Wo()}const Ts=new Set,Gr=new Set;function Mr(e){for(var r=0;r<e.length;r++)Ts.add(e[r]);for(var t of Gr)t(e)}function Me(e){var G;var r=this,t=r.ownerDocument,s=e.type,o=((G=e.composedPath)==null?void 0:G.call(e))||[],i=o[0]||e.target,a=0,u=e.__root;if(u){var l=o.indexOf(u);if(l!==-1&&(r===document||r===window)){e.__root=r;return}var d=o.indexOf(r);if(d===-1)return;l<=d&&(a=l)}if(i=o[a]||e.target,i!==r){eo(e,"currentTarget",{configurable:!0,get(){return i||t}});var h=R,g=S;Y(null),se(null);try{for(var m,E=[];i!==null;){var v=i.assignedSlot||i.parentNode||i.host||null;try{var P=i["__"+s];if(P!=null&&(!i.disabled||e.target===i))if(Cr(P)){var[y,...k]=P;y.apply(i,[e,...k])}else P.call(i,e)}catch(L){m?E.push(L):m=L}if(e.cancelBubble||v===r||v===null)break;i=v}if(m){for(let L of E)queueMicrotask(()=>{throw L});throw m}}finally{e.__root=r,delete e.currentTarget,Y(h),se(g)}}}function Vo(e){var r=document.createElement("template");return r.innerHTML=e.replaceAll("<!>","<!---->"),r.content}function Or(e,r){var t=S;t.nodes_start===null&&(t.nodes_start=e,t.nodes_end=r)}function Be(e,r){var t=(r&fo)!==0,s=(r&_o)!==0,o,i=!e.startsWith("<!>");return()=>{o===void 0&&(o=Vo(i?e:"<!>"+e),t||(o=Ye(o)));var a=s||es?document.importNode(o,!0):o.cloneNode(!0);if(t){var u=Ye(a),l=a.lastChild;Or(u,l)}else Or(a,a);return a}}function Pt(e=""){{var r=Nr(e+"");return Or(r,r),r}}function pe(e,r){e!==null&&e.before(r)}function Gt(e,r){var t=r==null?"":typeof r=="object"?r+"":r;t!==(e.__t??(e.__t=e.nodeValue))&&(e.__t=t,e.nodeValue=t+"")}function zo(e,r){return Ko(e,r)}const Te=new Map;function Ko(e,{target:r,anchor:t,props:s={},events:o,context:i,intro:a=!0}){yo();var u=new Set,l=g=>{for(var m=0;m<g.length;m++){var E=g[m];if(!u.has(E)){u.add(E);var v=Ho(E);r.addEventListener(E,Me,{passive:v});var P=Te.get(E);P===void 0?(document.addEventListener(E,Me,{passive:v}),Te.set(E,1)):Te.set(E,P+1)}}};l(Dr(Ts)),Gr.add(l);var d=void 0,h=Oo(()=>{var g=t??r.appendChild(Nr());return he(()=>{if(i){xr({});var m=te;m.c=i}o&&(s.$$events=o),d=e(g,s)||{},i&&$r()}),()=>{var v;for(var m of u){r.removeEventListener(m,Me);var E=Te.get(m);--E===0?(document.removeEventListener(m,Me),Te.delete(m)):Te.set(m,E)}Gr.delete(l),g!==t&&((v=g.parentNode)==null||v.removeChild(g))}});return Jo.set(d,h),d}let Jo=new WeakMap;const gr=0,Ve=1,hr=2;function Qo(e,r,t,s,o){var i=e,a=te,u=$,l,d,h,g=ke(void 0),m=ke(void 0),E=!1;function v(y,k){E=!0,k&&(se(P),Y(P),Qe(a));try{y===gr&&t&&(l?Ue(l):l=he(()=>t(i))),y===Ve&&s&&(d?Ue(d):d=he(()=>s(i,g))),y===hr&&o&&(h?Ue(h):h=he(()=>o(i,m))),y!==gr&&l&&ye(l,()=>l=null),y!==Ve&&d&&ye(d,()=>d=null),y!==hr&&h&&ye(h,()=>h=null)}finally{k&&(Qe(null),Y(null),se(null),jo())}}var P=tr(()=>{if(u!==(u=r())){if(oo(u)){var y=u;E=!1,y.then(k=>{y===u&&(De(g,k),v(Ve,!0))},k=>{if(y===u&&(De(m,k),v(hr,!0),!o))throw m.v}),Co(()=>{E||v(gr,!0)})}else De(g,u),v(Ve,!1);return()=>u=$}})}function Yo(e,r){return r}function Xo(e,r,t,s){for(var o=[],i=r.length,a=0;a<i;a++)Br(r[a].e,o,!0);var u=i>0&&o.length===0&&t!==null;if(u){var l=t.parentNode;ko(l),l.append(t),s.clear(),ae(e,r[0].prev,r[i-1].next)}as(o,()=>{for(var d=0;d<i;d++){var h=r[d];u||(s.delete(h.k),ae(e,h.prev,h.next)),le(h.e,!u)}})}function Zo(e,r,t,s,o,i=null){var a=e,u={flags:r,items:new Map,first:null};{var l=e;a=l.appendChild(Nr())}var d=null,h=!1,g=To(()=>{var m=t();return Cr(m)?m:m==null?[]:Dr(m)});tr(()=>{var m=A(g),E=m.length;h&&E===0||(h=E===0,en(m,u,a,o,r,s,t),i!==null&&(E===0?d?Ue(d):d=he(()=>i(a)):d!==null&&ye(d,()=>{d=null})),A(g))})}function en(e,r,t,s,o,i,a){var u=e.length,l=r.items,d=r.first,h=d,g,m=null,E=[],v=[],P,y,k,G;for(G=0;G<u;G+=1){if(P=e[G],y=i(P,G),k=l.get(y),k===void 0){var L=h?h.e.nodes_start:t;m=tn(L,r,m,m===null?r.first:m.next,P,y,G,s,o,a),l.set(y,m),E=[],v=[],h=m.next;continue}if(rn(k,P,G),(k.e.f&ne)!==0&&Ue(k.e),k!==h){if(g!==void 0&&g.has(k)){if(E.length<v.length){var H=v[0],I;m=H.prev;var W=E[0],z=E[E.length-1];for(I=0;I<E.length;I+=1)Ot(E[I],H,t);for(I=0;I<v.length;I+=1)g.delete(v[I]);ae(r,W.prev,z.next),ae(r,m,W),ae(r,z,H),h=H,m=z,G-=1,E=[],v=[]}else g.delete(k),Ot(k,h,t),ae(r,k.prev,k.next),ae(r,k,m===null?r.first:m.next),ae(r,m,k),m=k;continue}for(E=[],v=[];h!==null&&h.k!==y;)(h.e.f&ne)===0&&(g??(g=new Set)).add(h),v.push(h),h=h.next;if(h===null)continue;k=h}E.push(k),m=k,h=k.next}if(h!==null||g!==void 0){for(var Z=g===void 0?[]:Dr(g);h!==null;)(h.e.f&ne)===0&&Z.push(h),h=h.next;var x=Z.length;if(x>0){var Ee=u===0?t:null;Xo(r,Z,Ee,l)}}S.first=r.first&&r.first.e,S.last=m&&m.e}function rn(e,r,t,s){De(e.v,r),e.i=t}function tn(e,r,t,s,o,i,a,u,l,d){var h=(l&go)!==0,g=(l&mo)===0,m=h?g?wo(o,!1,!1):ke(o):o,E=(l&ho)===0?a:ke(a),v={i:E,v:m,k:i,a:null,e:null,prev:t,next:s};try{return v.e=he(()=>u(e,m,E,d),bo),v.e.prev=t&&t.e,v.e.next=s&&s.e,t===null?r.first=v:(t.next=v,t.e.next=v.e),s!==null&&(s.prev=v,s.e.prev=v.e),v}finally{}}function Ot(e,r,t){for(var s=e.next?e.next.e.nodes_start:t,o=r?r.e.nodes_start:t,i=e.e.nodes_start;i!==s;){var a=rr(i);o.before(i),i=a}}function ae(e,r,t){r===null?e.first=t:(r.next=t,r.e.next=t&&t.e),t!==null&&(t.prev=r,t.e.prev=r&&r.e)}function sn(e,r,t){var s=e,o,i;tr(()=>{o!==(o=r())&&(i&&(ye(i),i=null),o&&(i=he(()=>t(s,o))))},qr)}function Rr(e,r,t=r){Es(e,"input",s=>{var o=s?e.defaultValue:e.value;if(o=mr(e)?fr(o):o,t(o),o!==(o=r())){var i=e.selectionStart,a=e.selectionEnd;e.value=o??"",a!==null&&(e.selectionStart=i,e.selectionEnd=Math.min(a,e.value.length))}}),_s(r)==null&&e.value&&t(mr(e)?fr(e.value):e.value),ss(()=>{var s=r();mr(e)&&s===fr(e.value)||e.type==="date"&&!s&&!e.value||s!==e.value&&(e.value=s??"")})}function on(e,r,t=r){Es(e,"change",s=>{var o=s?e.defaultChecked:e.checked;t(o)}),_s(r)==null&&t(e.checked),ss(()=>{var s=r();e.checked=!!s})}function mr(e){var r=e.type;return r==="number"||r==="range"}function fr(e){return e===""?null:+e}const nn="5";var Bt;typeof window<"u"&&((Bt=window.__svelte??(window.__svelte={})).v??(Bt.v=new Set)).add(nn);function or(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function vs(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce((o,i)=>vs.bind(null,e,i,o,s),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((o,i)=>i.hook.bind(null,o,s),t)():t(s))}function an(e,r,t,s){const o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=(i,a)=>Promise.resolve().then(o.bind(null,a)).then(i.bind(null,a))),r==="after"&&(s=(i,a)=>{let u;return Promise.resolve().then(i.bind(null,a)).then(l=>(u=l,o(u,a))).then(()=>u)}),r==="error"&&(s=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(u=>o(u,a))),e.registry[t].push({hook:s,orig:o})}function un(e,r,t){if(!e.registry[r])return;const s=e.registry[r].map(o=>o.orig).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}const Rt=Function.bind,At=Rt.bind(Rt);function ln(e,r,t){const s=At(un,null).apply(null,[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{const i=[r,o];e[o]=e.api[o]=At(an,null).apply(null,i)})}function cn(){const e={registry:{}},r=vs.bind(null,e);return ln(r,e),r}const pn={Collection:cn};var dn="0.0.0-development",gn=`octokit-endpoint.js/${dn} ${or()}`,hn={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":gn},mediaType:{format:""}};function mn(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function fn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function ws(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(s=>{fn(r[s])?s in e?t[s]=ws(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function St(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function Ar(e,r,t){var o;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=mn(t.headers),St(t),St(t.headers);const s=ws(e||{},t);return t.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(i=>!s.mediaType.previews.includes(i)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),s}function _n(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var En=/\{[^{}}]+\}/g;function Tn(e){return e.replace(new RegExp("(?:^\\W+)|(?:(?<!\\W)\\W+$)","g"),"").split(/,/)}function vn(e){const r=e.match(En);return r?r.map(Tn).reduce((t,s)=>t.concat(s),[]):[]}function Ft(e,r){const t={__proto__:null};for(const s of Object.keys(e))r.indexOf(s)===-1&&(t[s]=e[s]);return t}function bs(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function be(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function Se(e,r,t){return r=e==="+"||e==="#"?bs(r):be(r),t?be(t)+"="+r:r}function ve(e){return e!=null}function _r(e){return e===";"||e==="&"||e==="?"}function wn(e,r,t,s){var o=e[t],i=[];if(ve(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(Se(r,o,_r(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(ve).forEach(function(a){i.push(Se(r,a,_r(r)?t:""))}):Object.keys(o).forEach(function(a){ve(o[a])&&i.push(Se(r,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(ve).forEach(function(u){a.push(Se(r,u))}):Object.keys(o).forEach(function(u){ve(o[u])&&(a.push(be(u)),a.push(Se(r,o[u].toString())))}),_r(r)?i.push(be(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?ve(o)&&i.push(be(t)):o===""&&(r==="&"||r==="?")?i.push(be(t)+"="):o===""&&i.push("");return i}function bn(e){return{expand:yn.bind(null,e)}}function yn(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let u="";const l=[];if(t.indexOf(o.charAt(0))!==-1&&(u=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(d){var h=/([^:\*]*)(?::(\d+)|(\*))?/.exec(d);l.push(wn(r,u,h[1],h[2]||h[3]))}),u&&u!=="+"){var a=",";return u==="?"?a="&":u!=="#"&&(a=u),(l.length!==0?u:"")+l.join(a)}else return l.join(",")}else return bs(i)}),e==="/"?e:e.replace(/\/$/,"")}function ys(e){var h;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=Ft(e,["method","baseUrl","url","headers","request","mediaType"]);const a=vn(t);t=bn(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const u=Object.keys(e).filter(g=>a.includes(g)).concat("baseUrl"),l=Ft(i,u);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(g=>g.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(h=e.mediaType.previews)!=null&&h.length)){const g=s.accept.match(new RegExp("(?<![\\w-])[\\w-]+(?=-preview)","g"))||[];s.accept=g.concat(e.mediaType.previews).map(m=>{const E=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${m}-preview${E}`}).join(",")}return["GET","HEAD"].includes(r)?t=_n(t,l):"data"in l?o=l.data:Object.keys(l).length&&(o=l),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o>"u"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function kn(e,r,t){return ys(Ar(e,r,t))}function ks(e,r){const t=Ar(e,r),s=kn.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:ks.bind(null,t),merge:Ar.bind(null,t),parse:ys})}var Pn=ks(null,hn),Ct=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Gn(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var we={},Dt;function On(){if(Dt)return we;Dt=1;const e=function(){};e.prototype=Object.create(null);const r=/; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,t=/\\([\v\u0020-\u00ff])/gu,s=/^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,o={type:"",parameters:new e};Object.freeze(o.parameters),Object.freeze(o);function i(u){if(typeof u!="string")throw new TypeError("argument header is required and must be a string");let l=u.indexOf(";");const d=l!==-1?u.slice(0,l).trim():u.trim();if(s.test(d)===!1)throw new TypeError("invalid media type");const h={type:d.toLowerCase(),parameters:new e};if(l===-1)return h;let g,m,E;for(r.lastIndex=l;m=r.exec(u);){if(m.index!==l)throw new TypeError("invalid parameter format");l+=m[0].length,g=m[1].toLowerCase(),E=m[2],E[0]==='"'&&(E=E.slice(1,E.length-1),t.test(E)&&(E=E.replace(t,"$1"))),h.parameters[g]=E}if(l!==u.length)throw new TypeError("invalid parameter format");return h}function a(u){if(typeof u!="string")return o;let l=u.indexOf(";");const d=l!==-1?u.slice(0,l).trim():u.trim();if(s.test(d)===!1)return o;const h={type:d.toLowerCase(),parameters:new e};if(l===-1)return h;let g,m,E;for(r.lastIndex=l;m=r.exec(u);){if(m.index!==l)return o;l+=m[0].length,g=m[1].toLowerCase(),E=m[2],E[0]==='"'&&(E=E.slice(1,E.length-1),t.test(E)&&(E=E.replace(t,"$1"))),h.parameters[g]=E}return l!==u.length?o:h}return we.default={parse:i,safeParse:a},we.parse=i,we.safeParse=a,we.defaultContentType=o,we}var Rn=On();class Fe extends Error{constructor(t,s,o){super(t);F(this,"name");F(this,"status");F(this,"request");F(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in o&&(this.response=o.response);const i=Object.assign({},o.request);o.request.headers.authorization&&(i.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(new RegExp("(?<! ) .*$")," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var An="10.0.3",Sn={headers:{"user-agent":`octokit-request.js/${An} ${or()}`}};function Fn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function Ut(e){var g,m,E,v,P;const r=((g=e.request)==null?void 0:g.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((m=e.request)==null?void 0:m.log)||console,s=((E=e.request)==null?void 0:E.parseSuccessResponseBody)!==!1,o=Fn(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([y,k])=>[y,String(k)]));let a;try{a=await r(e.url,{method:e.method,body:o,redirect:(v=e.request)==null?void 0:v.redirect,headers:i,signal:(P=e.request)==null?void 0:P.signal,...e.body&&{duplex:"half"}})}catch(y){let k="Unknown Error";if(y instanceof Error){if(y.name==="AbortError")throw y.status=500,y;k=y.message,y.name==="TypeError"&&"cause"in y&&(y.cause instanceof Error?k=y.cause.message:typeof y.cause=="string"&&(k=y.cause))}const G=new Fe(k,500,{request:e});throw G.cause=y,G}const u=a.status,l=a.url,d={};for(const[y,k]of a.headers)d[y]=k;const h={url:l,status:u,headers:d,data:""};if("deprecation"in d){const y=d.link&&d.link.match(/<([^<>]+)>; rel="deprecation"/),k=y&&y.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${d.sunset}${k?`. See ${k}`:""}`)}if(u===204||u===205)return h;if(e.method==="HEAD"){if(u<400)return h;throw new Fe(a.statusText,u,{response:h,request:e})}if(u===304)throw h.data=await Er(a),new Fe("Not modified",u,{response:h,request:e});if(u>=400)throw h.data=await Er(a),new Fe(Dn(h.data),u,{response:h,request:e});return h.data=s?await Er(a):a.body,h}async function Er(e){var s;const r=e.headers.get("content-type");if(!r)return e.text().catch(()=>"");const t=Rn.safeParse(r);if(Cn(t)){let o="";try{return o=await e.text(),JSON.parse(o)}catch{return o}}else return t.type.startsWith("text/")||((s=t.parameters.charset)==null?void 0:s.toLowerCase())==="utf-8"?e.text().catch(()=>""):e.arrayBuffer().catch(()=>new ArrayBuffer(0))}function Cn(e){return e.type==="application/json"||e.type==="application/scim+json"}function Dn(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function Sr(e,r){const t=e.defaults(r);return Object.assign(function(o,i){const a=t.merge(o,i);if(!a.request||!a.request.hook)return Ut(t.parse(a));const u=(l,d)=>Ut(t.parse(t.merge(l,d)));return Object.assign(u,{endpoint:t,defaults:Sr.bind(null,t)}),a.request.hook(u,a)},{endpoint:t,defaults:Sr.bind(null,t)})}var Fr=Sr(Pn,Sn),Un="0.0.0-development";function Ln(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var In=class extends Error{constructor(r,t,s){super(Ln(s));F(this,"name","GraphqlResponseError");F(this,"errors");F(this,"data");this.request=r,this.headers=t,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},qn=["method","baseUrl","url","headers","request","query","mediaType","operationName"],xn=["query","method","url"],Lt=/\/api\/v3\/?$/;function $n(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(xn.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((a,u)=>qn.includes(u)?(a[u]=s[u],a):(a.variables||(a.variables={}),a.variables[u]=s[u],a),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Lt.test(i)&&(o.url=i.replace(Lt,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const u={};for(const l of Object.keys(a.headers))u[l]=a.headers[l];throw new In(o,u,a.data)}return a.data.data})}function Vr(e,r){const t=e.defaults(r);return Object.assign((o,i)=>$n(t,o,i),{defaults:Vr.bind(null,t),endpoint:t.endpoint})}Vr(Fr,{headers:{"user-agent":`octokit-graphql.js/${Un} ${or()}`},method:"POST",url:"/graphql"});function jn(e){return Vr(e,{method:"POST",url:"/graphql"})}var Tr="(?:[a-zA-Z0-9_-]+)",It="\\.",qt=new RegExp(`^${Tr}${It}${Tr}${It}${Tr}$`),Nn=qt.test.bind(qt);async function Bn(e){const r=Nn(e),t=e.startsWith("v1.")||e.startsWith("ghs_"),s=e.startsWith("ghu_");return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}function Hn(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function Wn(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=Hn(e),r(o)}var Mn=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(Bn.bind(null,r),{hook:Wn.bind(null,r)})};const Ps="7.0.2",xt=()=>{},Vn=console.warn.bind(console),zn=console.error.bind(console),$t=`octokit-core.js/${Ps} ${or()}`;var ze;let Kn=(ze=class{constructor(r={}){F(this,"request");F(this,"graphql");F(this,"log");F(this,"hook");F(this,"auth");const t=new pn.Collection,s={baseUrl:Fr.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=r.userAgent?`${r.userAgent} ${$t}`:$t,r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=Fr.defaults(s),this.graphql=jn(this.request).defaults(s),this.log=Object.assign({debug:xt,info:xt,warn:Vn,error:zn},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,u=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",u.hook),this.auth=u}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=Mn(r.auth);t.wrap("request",i.hook),this.auth=i}const o=this.constructor;for(let i=0;i<o.plugins.length;++i)Object.assign(this,o.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...s){const o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var o;const t=this.plugins;return o=class extends this{},F(o,"plugins",t.concat(r.filter(i=>!t.includes(i)))),o}},F(ze,"VERSION",Ps),F(ze,"plugins",[]),ze);var Jn="0.0.0-development";function Qn(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)||"total_commits"in e.data))return e;const t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count,i=e.data.total_commits;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count,delete e.data.total_commits;const a=Object.keys(e.data)[0],u=e.data[a];return e.data=u,typeof t<"u"&&(e.data.incomplete_results=t),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e.data.total_commits=i,e}function zr(e,r,t){const s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,i=s.method,a=s.headers;let u=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!u)return{done:!0};try{const l=await o({method:i,url:u,headers:a}),d=Qn(l);if(u=((d.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1],!u&&"total_commits"in d.data){const h=new URL(d.url),g=h.searchParams,m=parseInt(g.get("page")||"1",10),E=parseInt(g.get("per_page")||"250",10);m*E<d.data.total_commits&&(g.set("page",String(m+1)),u=h.toString())}return{value:d}}catch(l){if(l.status!==409)throw l;return u="",{value:{status:200,headers:{},data:[]}}}}})}}function Gs(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),Os(e,[],zr(e,r,t)[Symbol.asyncIterator](),s)}function Os(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let i=!1;function a(){i=!0}return r=r.concat(s?s(o.value,a):o.value.data),i?r:Os(e,r,t,s)})}Object.assign(Gs,{iterator:zr});function Rs(e){return{paginate:Object.assign(Gs.bind(null,e),{iterator:zr.bind(null,e)})}}Rs.VERSION=Jn;var Yn=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,Xn=class extends Error{constructor(r,t){super(Yn(r.pathInQuery,t));F(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Zn=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);F(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},ei=e=>Object.prototype.toString.call(e)==="[object Object]";function As(e){const r=Ss(e,"pageInfo");if(r.length===0)throw new Zn(e);return r}var Ss=(e,r,t=[])=>{for(const s of Object.keys(e)){const o=[...t,s],i=e[s];if(ei(i)){if(i.hasOwnProperty(r))return o;const a=Ss(i,r,o);if(a.length>0)return a}}return[]},Ie=(e,r)=>r.reduce((t,s)=>t[s],e),vr=(e,r,t)=>{const s=r[r.length-1],o=[...r].slice(0,-1),i=Ie(e,o);typeof t=="function"?i[s]=t(i[s]):i[s]=t},ri=e=>{const r=As(e);return{pathInQuery:r,pageInfo:Ie(e,[...r,"pageInfo"])}},Fs=e=>e.hasOwnProperty("hasNextPage"),ti=e=>Fs(e)?e.endCursor:e.startCursor,si=e=>Fs(e)?e.hasNextPage:e.hasPreviousPage,Cs=e=>(r,t={})=>{let s=!0,o={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const i=await e.graphql(r,o),a=ri(i),u=ti(a.pageInfo);if(s=si(a.pageInfo),s&&u===o.cursor)throw new Xn(a,u);return o={...o,cursor:u},{done:!1,value:i}}})}},oi=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=As(e),s=[...t,"nodes"],o=Ie(r,s);o&&vr(e,s,l=>[...l,...o]);const i=[...t,"edges"],a=Ie(r,i);a&&vr(e,i,l=>[...l,...a]);const u=[...t,"pageInfo"];return vr(e,u,Ie(r,u)),e},ni=e=>{const r=Cs(e);return async(t,s={})=>{let o={};for await(const i of r(t,s))o=oi(o,i);return o}};function ii(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(ni(e),{iterator:Cs(e)})})}}const ai="16.0.0",ui={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createHostedRunnerForOrg:["POST /orgs/{org}/actions/hosted-runners"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteHostedRunnerForOrg:["DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getHostedRunnerForOrg:["GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],getHostedRunnersGithubOwnedImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/github-owned"],getHostedRunnersLimitsForOrg:["GET /orgs/{org}/actions/hosted-runners/limits"],getHostedRunnersMachineSpecsForOrg:["GET /orgs/{org}/actions/hosted-runners/machine-sizes"],getHostedRunnersPartnerImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/partner"],getHostedRunnersPlatformsForOrg:["GET /orgs/{org}/actions/hosted-runners/platforms"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listGithubHostedRunnersInGroupForOrg:["GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"],listHostedRunnersForOrg:["GET /orgs/{org}/actions/hosted-runners"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateHostedRunnerForOrg:["PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubBillingUsageReportUser:["GET /users/{username}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},campaigns:{createCampaign:["POST /orgs/{org}/campaigns"],deleteCampaign:["DELETE /orgs/{org}/campaigns/{campaign_number}"],getCampaignSummary:["GET /orgs/{org}/campaigns/{campaign_number}"],listOrgCampaigns:["GET /orgs/{org}/campaigns"],updateCampaign:["PATCH /orgs/{org}/campaigns/{campaign_number}"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},credentials:{revoke:["POST /credentials/revoke"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},hostedCompute:{createNetworkConfigurationForOrg:["POST /orgs/{org}/settings/network-configurations"],deleteNetworkConfigurationFromOrg:["DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkConfigurationForOrg:["GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkSettingsForOrg:["GET /orgs/{org}/settings/network-settings/{network_settings_id}"],listNetworkConfigurationsForOrg:["GET /orgs/{org}/settings/network-configurations"],updateNetworkConfigurationForOrg:["PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createIssueType:["POST /orgs/{org}/issue-types"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteIssueType:["DELETE /orgs/{org}/issue-types/{issue_type_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getOrgRulesetHistory:["GET /orgs/{org}/rulesets/{ruleset_id}/history"],getOrgRulesetVersion:["GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listIssueTypes:["GET /orgs/{org}/issue-types"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateIssueType:["PUT /orgs/{org}/issue-types/{issue_type_id}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesetHistory:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"],getRepoRulesetVersion:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues",{},{deprecated:"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests"}],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var li=ui;const fe=new Map;for(const[e,r]of Object.entries(li))for(const[t,s]of Object.entries(r)){const[o,i,a]=s,[u,l]=o.split(/ /),d=Object.assign({method:u,url:l},i);fe.has(e)||fe.set(e,new Map),fe.get(e).set(t,{scope:e,methodName:t,endpointDefaults:d,decorations:a})}const ci={has({scope:e},r){return fe.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[...fe.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];const o=fe.get(r).get(s);if(!o)return;const{endpointDefaults:i,decorations:a}=o;return a?t[s]=di(e,r,s,i,a):t[s]=e.request.defaults(i),t[s]}};function pi(e){const r={};for(const t of fe.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},ci);return r}function di(e,r,t,s,o){const i=e.request.defaults(s);function a(...u){let l=i.endpoint.merge(...u);if(o.mapToData)return l=Object.assign({},l,{data:l[o.mapToData],[o.mapToData]:void 0}),i(l);if(o.renamed){const[d,h]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${d}.${h}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const d=i.endpoint.merge(...u);for(const[h,g]of Object.entries(o.renamedParameters))h in d&&(e.log.warn(`"${h}" parameter is deprecated for "octokit.${r}.${t}()". Use "${g}" instead`),g in d||(d[g]=d[h]),delete d[h]);return i(d)}return i(...u)}return Object.assign(a,i)}function Ds(e){return{rest:pi(e)}}Ds.VERSION=ai;var Ke={exports:{}},gi=Ke.exports,jt;function hi(){return jt||(jt=1,function(e,r){(function(t,s){e.exports=s()})(gi,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Ct<"u"?Ct:typeof self<"u"?self:{};function s(b){return b&&b.default||b}var o=function(b,c,n={}){var p,f,_;for(p in c)_=c[p],n[p]=(f=b[p])!=null?f:_;return n},i=function(b,c,n={}){var p,f;for(p in b)f=b[p],c[p]!==void 0&&(n[p]=f);return n},a={load:o,overwrite:i},u;u=class{constructor(c,n){this.incr=c,this.decr=n,this._first=null,this._last=null,this.length=0}push(c){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:c,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var c;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),c=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,c}first(){if(this._first!=null)return this._first.value}getArray(){var c,n,p;for(c=this._first,p=[];c!=null;)p.push((n=c,c=c.next,n.value));return p}forEachShift(c){var n;for(n=this.shift();n!=null;)c(n),n=this.shift()}debug(){var c,n,p,f,_;for(c=this._first,_=[];c!=null;)_.push((n=c,c=c.next,{value:n.value,prev:(p=n.prev)!=null?p.value:void 0,next:(f=n.next)!=null?f.value:void 0}));return _}};var l=u,d;d=class{constructor(c){if(this.instance=c,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,p)=>this._addListener(n,"many",p),this.instance.once=(n,p)=>this._addListener(n,"once",p),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(c,n,p){var f;return(f=this._events)[c]==null&&(f[c]=[]),this._events[c].push({cb:p,status:n}),this.instance}listenerCount(c){return this._events[c]!=null?this._events[c].length:0}async trigger(c,...n){var p,f;try{return c!=="debug"&&this.trigger("debug",`Event triggered: ${c}`,n),this._events[c]==null?void 0:(this._events[c]=this._events[c].filter(function(_){return _.status!=="none"}),f=this._events[c].map(async _=>{var T,w;if(_.status!=="none"){_.status==="once"&&(_.status="none");try{return w=typeof _.cb=="function"?_.cb(...n):void 0,typeof(w!=null?w.then:void 0)=="function"?await w:w}catch(O){return T=O,this.trigger("error",T),null}}}),(await Promise.all(f)).find(function(_){return _!=null}))}catch(_){return p=_,this.trigger("error",p),null}}};var h=d,g,m,E;g=l,m=h,E=class{constructor(c){this.Events=new m(this),this._length=0,this._lists=(function(){var n,p,f;for(f=[],n=1,p=c;1<=p?n<=p:n>=p;1<=p?++n:--n)f.push(new g(()=>this.incr(),()=>this.decr()));return f}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(c){return this._lists[c.options.priority].push(c)}queued(c){return c!=null?this._lists[c].length:this._length}shiftAll(c){return this._lists.forEach(function(n){return n.forEachShift(c)})}getFirst(c=this._lists){var n,p,f;for(n=0,p=c.length;n<p;n++)if(f=c[n],f.length>0)return f;return[]}shiftLastFrom(c){return this.getFirst(this._lists.slice(c).reverse()).shift()}};var v=E,P;P=class extends Error{};var y=P,k,G,L,H,I;H=10,G=5,I=a,k=y,L=class{constructor(c,n,p,f,_,T,w,O){this.task=c,this.args=n,this.rejectOnDrop=_,this.Events=T,this._states=w,this.Promise=O,this.options=I.load(p,f),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===f.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((D,q)=>{this._resolve=D,this._reject=q}),this.retryCount=0}_sanitizePriority(c){var n;return n=~~c!==c?G:c,n<0?0:n>H-1?H-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:c,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(c??new k(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(c){var n;if(n=this._states.jobStatus(this.options.id),!(n===c||c==="DONE"&&n===null))throw new k(`Invalid job status ${n}, expected ${c}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(c,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:c,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(c,n,p,f){var _,T,w;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),T={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",T);try{if(w=await(c!=null?c.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(T),await f(this.options,T),this._assertStatus("DONE"),this._resolve(w)}catch(O){return _=O,this._onFailure(_,T,n,p,f)}}doExpire(c,n,p){var f,_;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),_={args:this.args,options:this.options,retryCount:this.retryCount},f=new k(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(f,_,c,n,p)}async _onFailure(c,n,p,f,_){var T,w;if(p())return T=await this.Events.trigger("failed",c,n),T!=null?(w=~~T,this.Events.trigger("retry",`Retrying ${this.options.id} after ${w} ms`,n),this.retryCount++,f(w)):(this.doDone(n),await _(this.options,n),this._assertStatus("DONE"),this._reject(c))}doDone(c){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",c)}};var W=L,z,Z,x;x=a,z=y,Z=class{constructor(c,n,p){this.instance=c,this.storeOptions=n,this.clientId=this.instance._randomIndex(),x.load(p,p,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var c;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(c=this.heartbeat=setInterval(()=>{var n,p,f,_,T;if(_=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&_>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=_,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&_>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:f,reservoir:T}=this.storeOptions,this._lastReservoirIncrease=_,p=f!=null?Math.min(n,f-T):n,p>0))return this.storeOptions.reservoir+=p,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?c.unref():void 0:clearInterval(this.heartbeat)}async __publish__(c){return await this.yieldLoop(),this.instance.Events.trigger("message",c.toString())}async __disconnect__(c){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(c=0){return new this.Promise(function(n,p){return setTimeout(n,c)})}computePenalty(){var c;return(c=this.storeOptions.penalty)!=null?c:15*this.storeOptions.minTime||5e3}async __updateSettings__(c){return await this.yieldLoop(),x.overwrite(c,c,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(c){return await this.yieldLoop(),this._nextRequest+this.timeout<c}computeCapacity(){var c,n;return{maxConcurrent:c,reservoir:n}=this.storeOptions,c!=null&&n!=null?Math.min(c-this._running,n):c!=null?c-this._running:n??null}conditionsCheck(c){var n;return n=this.computeCapacity(),n==null||c<=n}async __incrementReservoir__(c){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=c,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(c){return this._unblockTime>=c}check(c,n){return this.conditionsCheck(c)&&this._nextRequest-n<=0}async __check__(c){var n;return await this.yieldLoop(),n=Date.now(),this.check(c,n)}async __register__(c,n,p){var f,_;return await this.yieldLoop(),f=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),_=Math.max(this._nextRequest-f,0),this._nextRequest=f+_+this.storeOptions.minTime,{success:!0,wait:_,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(c,n){var p,f,_;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new z(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return f=Date.now(),_=this.storeOptions.highWater!=null&&c===this.storeOptions.highWater&&!this.check(n,f),p=this.strategyIsBlock()&&(_||this.isBlocked(f)),p&&(this._unblockTime=f+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:_,blocked:p,strategy:this.storeOptions.strategy}}async __free__(c,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var Ee=Z,Re,He;Re=y,He=class{constructor(c){this.status=c,this._jobs={},this.counts=this.status.map(function(){return 0})}next(c){var n,p;if(n=this._jobs[c],p=n+1,n!=null&&p<this.status.length)return this.counts[n]--,this.counts[p]++,this._jobs[c]++;if(n!=null)return this.counts[n]--,delete this._jobs[c]}start(c){var n;return n=0,this._jobs[c]=n,this.counts[n]++}remove(c){var n;return n=this._jobs[c],n!=null&&(this.counts[n]--,delete this._jobs[c]),n!=null}jobStatus(c){var n;return(n=this.status[this._jobs[c]])!=null?n:null}statusJobs(c){var n,p,f,_,T;if(c!=null){if(p=this.status.indexOf(c),p<0)throw new Re(`status must be one of ${this.status.join(", ")}`);f=this._jobs,_=[];for(n in f)T=f[n],T===p&&_.push(n);return _}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((c,n,p)=>(c[this.status[p]]=n,c),{})}};var js=He,Xr,Zr;Xr=l,Zr=class{constructor(c,n){this.schedule=this.schedule.bind(this),this.name=c,this.Promise=n,this._running=0,this._queue=new Xr}isEmpty(){return this._queue.length===0}async _tryToRun(){var c,n,p,f,_,T,w;if(this._running<1&&this._queue.length>0)return this._running++,{task:w,args:c,resolve:_,reject:f}=this._queue.shift(),n=await async function(){try{return T=await w(...c),function(){return _(T)}}catch(O){return p=O,function(){return f(p)}}}(),this._running--,this._tryToRun(),n()}schedule(c,...n){var p,f,_;return _=f=null,p=new this.Promise(function(T,w){return _=T,f=w}),this._queue.push({task:c,args:n,resolve:_,reject:f}),this._tryToRun(),p}};var Ns=Zr,et="2.19.5",Bs={version:et},Hs=Object.freeze({version:et,default:Bs}),rt=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),tt=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ws=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),st,ot,nt,it,at,We;We=a,st=h,it=rt,nt=tt,at=Ws,ot=(function(){class b{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,We.load(this.limiterOptions,this.defaults,this),this.Events=new st(this),this.instances={},this.Bottleneck=Et,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new it(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new nt(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var p;return(p=this.instances[n])!=null?p:(()=>{var f;return f=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",f,n),f})()}async deleteKey(n=""){var p,f;return f=this.instances[n],this.connection&&(p=await this.connection.__runCommand__(["del",...at.allKeys(`${this.id}-${n}`)])),f!=null&&(delete this.instances[n],await f.disconnect()),f!=null||p>0}limiters(){var n,p,f,_;p=this.instances,f=[];for(n in p)_=p[n],f.push({key:n,limiter:_});return f}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,p,f,_,T,w,O,D,q;if(this.connection==null)return this.Promise.resolve(this.keys());for(w=[],n=null,q=`b_${this.id}-`.length,p=9;n!==0;)for([D,f]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~D,_=0,O=f.length;_<O;_++)T=f[_],w.push(T.slice(q,-p));return w}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var p,f,_,T,w,O;w=Date.now(),_=this.instances,T=[];for(f in _){O=_[f];try{await O._store.__groupCheck__(w)?T.push(this.deleteKey(f)):T.push(void 0)}catch(D){p=D,T.push(O.Events.trigger("error",p))}}return T},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(We.overwrite(n,this.defaults,this),We.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var p;if(!this.sharedConnection)return(p=this.connection)!=null?p.disconnect(n):void 0}}return b.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},b}).call(t);var Ms=ot,ut,lt,ct;ct=a,lt=h,ut=(function(){class b{constructor(n={}){this.options=n,ct.load(this.options,this.defaults,this),this.Events=new lt(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,p)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var p;return this._arr.push(n),p=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),p}}return b.prototype.defaults={maxTime:null,maxSize:null,Promise},b}).call(t);var Vs=ut,zs=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ks=s(Hs),pt,dt,ir,ar,gt,ur,ht,mt,ft,lr,ee,_t=[].splice;ur=10,dt=5,ee=a,ht=v,ar=W,gt=Ee,mt=zs,ir=h,ft=js,lr=Ns,pt=(function(){class b{constructor(n={},...p){var f,_;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,p),ee.load(n,this.instanceDefaults,this),this._queues=new ht(ur),this._scheduled={},this._states=new ft(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new ir(this),this._submitLock=new lr("submit",this.Promise),this._registerLock=new lr("register",this.Promise),_=ee.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return f=ee.load(n,this.redisStoreDefaults,{}),new mt(this,_,f);if(this.datastore==="local")return f=ee.load(n,this.localStoreDefaults,{}),new gt(this,_,f);throw new b.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var T;return(T=this._store.heartbeat)!=null&&typeof T.ref=="function"?T.ref():void 0}),this._queues.on("zero",()=>{var T;return(T=this._store.heartbeat)!=null&&typeof T.unref=="function"?T.unref():void 0})}_validateOptions(n,p){if(!(n!=null&&typeof n=="object"&&p.length===0))throw new b.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,p,f,_){var T,w;try{if({running:w}=await this._store.__free__(n,f.weight),this.Events.trigger("debug",`Freed ${f.id}`,_),w===0&&this.empty())return this.Events.trigger("idle")}catch(O){return T=O,this.Events.trigger("error",T)}}_run(n,p,f){var _,T,w;return p.doRun(),_=this._clearGlobalState.bind(this,n),w=this._run.bind(this,n,p),T=this._free.bind(this,n,p),this._scheduled[n]={timeout:setTimeout(()=>p.doExecute(this._limiter,_,w,T),f),expiration:p.options.expiration!=null?setTimeout(function(){return p.doExpire(_,w,T)},f+p.options.expiration):void 0,job:p}}_drainOne(n){return this._registerLock.schedule(()=>{var p,f,_,T,w;return this.queued()===0?this.Promise.resolve(null):(w=this._queues.getFirst(),{options:T,args:p}=_=w.first(),n!=null&&T.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${T.id}`,{args:p,options:T}),f=this._randomIndex(),this._store.__register__(f,T.weight,T.expiration).then(({success:O,wait:D,reservoir:q})=>{var Ae;return this.Events.trigger("debug",`Drained ${T.id}`,{success:O,args:p,options:T}),O?(w.shift(),Ae=this.empty(),Ae&&this.Events.trigger("empty"),q===0&&this.Events.trigger("depleted",Ae),this._run(f,_,D),this.Promise.resolve(T.weight)):this.Promise.resolve(null)})))})}_drainAll(n,p=0){return this._drainOne(n).then(f=>{var _;return f!=null?(_=n!=null?n-f:n,this._drainAll(_,p+f)):this.Promise.resolve(p)}).catch(f=>this.Events.trigger("error",f))}_dropAllQueued(n){return this._queues.shiftAll(function(p){return p.doDrop({message:n})})}stop(n={}){var p,f;return n=ee.load(n,this.stopDefaults),f=_=>{var T;return T=()=>{var w;return w=this._states.counts,w[0]+w[1]+w[2]+w[3]===_},new this.Promise((w,O)=>T()?w():this.on("done",()=>{if(T())return this.removeAllListeners("done"),w()}))},p=n.dropWaitingJobs?(this._run=function(_,T){return T.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var _,T,w;T=this._scheduled;for(_ in T)w=T[_],this.jobStatus(w.job.options.id)==="RUNNING"&&(clearTimeout(w.timeout),clearTimeout(w.expiration),w.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),f(0)}))):this.schedule({priority:ur-1,weight:0},()=>f(1)),this._receive=function(_){return _._reject(new b.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new b.prototype.BottleneckError("stop() has already been called")),p}async _addToQueue(n){var p,f,_,T,w,O,D;({args:p,options:T}=n);try{({reachedHWM:w,blocked:f,strategy:D}=await this._store.__submit__(this.queued(),T.weight))}catch(q){return _=q,this.Events.trigger("debug",`Could not queue ${T.id}`,{args:p,options:T,error:_}),n.doDrop({error:_}),!1}return f?(n.doDrop(),!0):w&&(O=D===b.prototype.strategy.LEAK?this._queues.shiftLastFrom(T.priority):D===b.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(T.priority+1):D===b.prototype.strategy.OVERFLOW?n:void 0,O!=null&&O.doDrop(),O==null||D===b.prototype.strategy.OVERFLOW)?(O==null&&n.doDrop(),w):(n.doQueue(w,f),this._queues.push(n),await this._drainAll(),w)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new b.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var p,f,_,T,w,O,D;return typeof n[0]=="function"?(w=n,[f,...n]=w,[p]=_t.call(n,-1),T=ee.load({},this.jobDefaults)):(O=n,[T,f,...n]=O,[p]=_t.call(n,-1),T=ee.load(T,this.jobDefaults)),D=(...q)=>new this.Promise(function(Ae,Qs){return f(...q,function(...Tt){return(Tt[0]!=null?Qs:Ae)(Tt)})}),_=new ar(D,n,T,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),_.promise.then(function(q){return typeof p=="function"?p(...q):void 0}).catch(function(q){return Array.isArray(q)?typeof p=="function"?p(...q):void 0:typeof p=="function"?p(q):void 0}),this._receive(_)}schedule(...n){var p,f,_;return typeof n[0]=="function"?([_,...n]=n,f={}):[f,_,...n]=n,p=new ar(_,n,f,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(p),p.promise}wrap(n){var p,f;return p=this.schedule.bind(this),f=function(..._){return p(n.bind(this),..._)},f.withOptions=function(_,...T){return p(_,n,...T)},f}async updateSettings(n={}){return await this._store.__updateSettings__(ee.overwrite(n,this.storeDefaults)),ee.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return b.default=b,b.Events=ir,b.version=b.prototype.version=Ks.version,b.strategy=b.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},b.BottleneckError=b.prototype.BottleneckError=y,b.Group=b.prototype.Group=Ms,b.RedisConnection=b.prototype.RedisConnection=rt,b.IORedisConnection=b.prototype.IORedisConnection=tt,b.Batcher=b.prototype.Batcher=Vs,b.prototype.jobDefaults={priority:dt,weight:1,expiration:null,id:"<no-id>"},b.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:b.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},b.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},b.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},b.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},b.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},b}).call(t);var Et=pt,Js=Et;return Js})}(Ke)),Ke.exports}var mi=hi();const Us=Gn(mi);var fi="0.0.0-development";async function Ls(e,r,t,s){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const o=s.request.retries!=null?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,o,i)}throw t}async function _i(e,r,t,s){const o=new Us;return o.on("failed",function(i,a){const u=~~i.request.request.retries,l=~~i.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,u>a.retryCount)return l*e.retryAfterBaseValue}),o.schedule(Ei.bind(null,e,r,t),s)}async function Ei(e,r,t,s){const o=await t(t,s);if(o.data&&o.data.errors&&o.data.errors.length>0&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const i=new Fe(o.data.errors[0].message,500,{request:s,response:o});return Ls(e,r,i,s)}return o}function Is(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,410,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",Ls.bind(null,t,e)),e.hook.wrap("request",_i.bind(null,t,e))),{retry:{retryRequest:(s,o,i)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:i}),s)}}}Is.VERSION=fi;var Ti="0.0.0-development",wr=()=>Promise.resolve();function vi(e,r,t){return e.retryLimiter.schedule(wi,e,r,t)}async function wi(e,r,t){const{pathname:s}=new URL(t.url,"http://github.test"),o=bi(t.method,s),i=!o&&t.method!=="GET"&&t.method!=="HEAD",a=t.method==="GET"&&s.startsWith("/search/"),u=s.startsWith("/graphql"),d=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(d.expiration=1e3*60),(i||u)&&await e.write.key(e.id).schedule(d,wr),i&&e.triggersNotification(s)&&await e.notifications.key(e.id).schedule(d,wr),a&&await e.search.key(e.id).schedule(d,wr);const h=(o?e.auth:e.global).key(e.id).schedule(d,r,t);if(u){const g=await h;if(g.data.errors!=null&&g.data.errors.some(m=>m.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:g,data:g.data})}return h}function bi(e,r){return e==="PATCH"&&/^\/applications\/[^/]+\/token\/scoped$/.test(r)||e==="POST"&&(/^\/applications\/[^/]+\/token$/.test(r)||/^\/app\/installations\/[^/]+\/access_tokens$/.test(r)||r==="/login/oauth/access_token")}var yi=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/issues/{issue_number}/sub_issue","/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function ki(e){const t=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var Nt=ki(yi),qs=Nt.test.bind(Nt),de={},Pi=function(e,r){de.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),de.auth=new e.Group({id:"octokit-auth",maxConcurrent:1,...r}),de.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),de.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),de.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function Kr(e,r){const{enabled:t=!0,Bottleneck:s=Us,id:o="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const u={timeout:i};typeof a<"u"&&(u.connection=a),de.global==null&&Pi(s,u);const l=Object.assign({clustering:a!=null,triggersNotification:qs,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...de},r.throttle);if(typeof l.onSecondaryRateLimit!="function"||typeof l.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const d={},h=new s.Events(d);return d.on("secondary-limit",l.onSecondaryRateLimit),d.on("rate-limit",l.onRateLimit),d.on("error",g=>e.log.warn("Error in throttling-plugin limit handler",g)),l.retryLimiter.on("failed",async function(g,m){const[E,v,P]=m.args,{pathname:y}=new URL(P.url,"http://github.test");if(!(y.startsWith("/graphql")&&g.status!==401||g.status===403||g.status===429))return;const G=~~v.retryCount;v.retryCount=G,P.request.retryCount=G;const{wantRetry:L,retryAfter:H=0}=await async function(){var I;if(/\bsecondary rate\b/i.test(g.message)){const W=Number(g.response.headers["retry-after"])||E.fallbackSecondaryRateRetryAfter;return{wantRetry:await h.trigger("secondary-limit",W,P,e,G),retryAfter:W}}if(g.response.headers!=null&&g.response.headers["x-ratelimit-remaining"]==="0"||(((I=g.response.data)==null?void 0:I.errors)??[]).some(W=>W.type==="RATE_LIMITED")){const W=new Date(~~g.response.headers["x-ratelimit-reset"]*1e3).getTime(),z=Math.max(Math.ceil((W-Date.now())/1e3)+1,0);return{wantRetry:await h.trigger("rate-limit",z,P,e,G),retryAfter:z}}return{}}();if(L)return v.retryCount++,H*E.retryAfterBaseValue}),e.hook.wrap("request",vi.bind(null,l)),{}}Kr.VERSION=Ti;Kr.triggersNotification=qs;var Gi="0.0.0-development",xs=Kn.plugin(Ds,Rs,ii,Is,Kr).defaults({userAgent:`octokit.js/${Gi}`,throttle:{onRateLimit:Oi,onSecondaryRateLimit:Ri}});function Oi(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function Ri(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}const Jr="phatelot",Qr="nina",Yr="main";let Oe,br=(()=>{const e=$s()||"";return e&&(Oe=new xs({auth:e})),e})();function nr(){return!!Oe}function Ai(e){br=e,localStorage.setItem("nina-admin",br),Oe=new xs({auth:br})}function $s(){return localStorage.getItem("nina-admin")}async function Si(e,r){return Ci(`${Fi(e)}.png`,r)}function Fi(e){let r=`${e}`;return"0".repeat(3-r.length)+r}async function Ci(e,r,t){if(!nr())throw new Error("please fill in Github token");return await Oe.request("PUT /repos/{owner}/{repo}/contents/{path}",{owner:Jr,repo:Qr,branch:Yr,path:`public/images/${e}`,message:`add ${e} [skip ci]`,content:r})}async function Di(e,r){if(!nr())throw new Error("please fill in Github token");return await Oe.request("PUT /repos/{owner}/{repo}/contents/{path}",{owner:Jr,repo:Qr,branch:Yr,path:"src/lib/weighings.json",message:"update weighins",content:window.btoa(JSON.stringify({$schema:"./schema.json",weighings:e},null,2)),sha:r})}async function Ui(){if(!nr())throw new Error("please fill in Github token");return await Oe.request("GET /repos/{owner}/{repo}/contents/{path}",{owner:Jr,repo:Qr,branch:Yr,path:"src/lib/weighings.json"}).then(e=>{const{content:r,sha:t}=e.data;return{data:JSON.parse(window.atob(r)).weighings,sha:t}})}var Li=Be("<li> </li>"),Ii=(e,r,t)=>r(A(t)),qi=Be('<ol></ol> <form><label>Nina image <input type="file"/></label> <label>Day <input type="number" min="0"/></label> <label>Weight in lbs <input type="number" min="0"/></label> <label>Use new scale <input type="checkbox"/></label></form> <button>Upload weighing</button>',1),xi=Be("<h1>List / upload weighins</h1> <!>",1);function $i(e,r){xr(r,!0);let t=B(""),s=B(0),o=B(0),i=B(!1);function a(g){var v;const m=(v=g.target.files)==null?void 0:v[0];if(!m)return;const E=new FileReader;E.onload=()=>{U(t,E.result.split(",")[1],!0)},E.readAsDataURL(m)}async function u(g){const m=g.data[g.data.length-1];g.data.push({day:A(s),weightInLbs:A(o),scale:m.scale+(A(i)?1:0)}),await Si(g.data.length,A(t)),await Di(g.data,g.sha),U(t,""),U(s,0),U(o,0)}function l(){return!nr()||!A(t)||!A(s)||!A(o)}var d=xi(),h=j(kr(d),2);Qo(h,Ui,g=>{var m=Pt("Loading data...");pe(g,m)},(g,m)=>{var E=qi(),v=kr(E);Zo(v,21,()=>A(m).data,Yo,(x,Ee)=>{var Re=Li(),He=V(Re);dr(()=>Gt(He,`Day ${A(Ee).day??""}: ${A(Ee).weightInLbs??""}lbs`)),pe(x,Re)});var P=j(v,2),y=V(P),k=j(V(y));k.__change=a;var G=j(y,2),L=j(V(G)),H=j(G,2),I=j(V(H)),W=j(H,2),z=j(V(W)),Z=j(P,2);Z.__click=[Ii,u,m],dr(x=>Z.disabled=x,[l]),Rr(L,()=>A(s),x=>U(s,x)),Rr(I,()=>A(o),x=>U(o,x)),on(z,()=>A(i),x=>U(i,x)),pe(g,E)},(g,m)=>{var E=Pt();dr(()=>Gt(E,A(m))),pe(g,E)}),pe(e,d),$r()}Mr(["change","click"]);var ji=(e,r)=>Ai(A(r)),Ni=Be('<h1>Set up Github token</h1> <form><label>Token <input type="password"/></label></form>',1);function Bi(e,r){xr(r,!0);let t=B(ge($s()||""));var s=Ni(),o=j(kr(s),2),i=V(o),a=j(V(i));a.__change=[ji,t],Rr(a,()=>A(t),u=>U(t,u)),pe(e,s),$r()}Mr(["change"]);var Hi=(e,r)=>r("/"),Wi=(e,r)=>r("/token"),Mi=Be('<main class="container-fluid"><nav><ul><li><strong>Nina admin</strong></li></ul> <ul><li><a href="#/" class="contrast">Weighins</a></li> <li><a href="#/token" class="secondary">Token</a></li></ul></nav> <!></main>');function Vi(e){let r=B(ge(t()));function t(){return location.hash.slice(1)||"/"}window.addEventListener("hashchange",()=>{U(r,t(),!0)});function s(v){location.hash=v}const o={"/":$i,"/token":Bi},i=Eo(()=>o[A(r)]??o["/"]);var a=Mi(),u=V(a),l=j(V(u),2),d=V(l),h=V(d);h.__click=[Hi,s];var g=j(d,2),m=V(g);m.__click=[Wi,s];var E=j(u,2);sn(E,()=>A(i),(v,P)=>{P(v,{})}),pe(e,a)}Mr(["click"]);zo(Vi,{target:document.getElementById("app")});
